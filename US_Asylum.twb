<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='AsylumandRefugeinUSA' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='df_country+' inline='true' name='federated.1edaj3b15vygln1cflsen19wexfd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_country' name='textscan.0lhac4414xfaj717y0g4t1eqmx7j'>
            <connection class='textscan' directory='C:/Users/ighos/OneDrive/Documents/Portfolio/US Asylum/Cleaned data' filename='df_country.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0lhac4414xfaj717y0g4t1eqmx7j' name='df_country.csv' table='[df_country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Type' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Number' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0lhac4414xfaj717y0g4t1eqmx7j' name='df_country.csv' table='[df_country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Number' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0lhac4414xfaj717y0g4t1eqmx7j' name='df_region.csv' table='[df_region#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='string' name='Type' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
              <column datatype='real' name='Number' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0lhac4414xfaj717y0g4t1eqmx7j' name='df_year.csv' table='[df_year#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='integer' name='Number' ordinal='2' />
              <column datatype='string' name='Type' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country]' value='[df_country.csv].[Country]' />
          <map key='[F1 (df_region.csv)]' value='[df_region.csv].[F1]' />
          <map key='[F1 (df_year.csv)]' value='[df_year.csv].[F1]' />
          <map key='[F1]' value='[df_country.csv].[F1]' />
          <map key='[Number (df_region.csv)]' value='[df_region.csv].[Number]' />
          <map key='[Number (df_year.csv)]' value='[df_year.csv].[Number]' />
          <map key='[Number]' value='[df_country.csv].[Number]' />
          <map key='[Region]' value='[df_region.csv].[Region]' />
          <map key='[Type (df_region.csv)]' value='[df_region.csv].[Type]' />
          <map key='[Type (df_year.csv)]' value='[df_year.csv].[Type]' />
          <map key='[Type]' value='[df_country.csv].[Type]' />
          <map key='[Year (df_region.csv)]' value='[df_region.csv].[Year]' />
          <map key='[Year (df_year.csv)]' value='[df_year.csv].[Year]' />
          <map key='[Year]' value='[df_country.csv].[Year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_region.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_year.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df_country.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[df_country.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[df_country.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df_country.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[df_country.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (df_region.csv)]</local-name>
            <parent-name>[df_region.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (df_region.csv)]</local-name>
            <parent-name>[df_region.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type (df_region.csv)]</local-name>
            <parent-name>[df_region.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[df_region.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number (df_region.csv)]</local-name>
            <parent-name>[df_region.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (df_year.csv)]</local-name>
            <parent-name>[df_year.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (df_year.csv)]</local-name>
            <parent-name>[df_year.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number (df_year.csv)]</local-name>
            <parent-name>[df_year.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type (df_year.csv)]</local-name>
            <parent-name>[df_year.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='def' datatype='real' name='[Calculation_2664723607940784129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Type] == &apos;def&apos; THEN [Number] ELSE NULL END' />
      </column>
      <column caption='aff' datatype='real' name='[Calculation_2664723607941021698]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Type] == &apos;aff&apos; THEN [Number] ELSE NULL END' />
      </column>
      <column caption='aff_percentage' datatype='real' name='[Calculation_2664723607946874886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_2664723607941021698])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])))*100' />
      </column>
      <column caption='def_percentage' datatype='real' name='[Calculation_2664723607947771911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_2664723607940784129])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])))*100' />
      </column>
      <column caption='ref' datatype='real' name='[Calculation_2664723607960514569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Type] == &apos;ref&apos; THEN [Number] ELSE NULL END' />
      </column>
      <column caption='ref_percentage' datatype='real' name='[Calculation_2664723607960698890]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_2664723607960514569])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])+SUM([Calculation_2664723607960514569]))*100' />
      </column>
      <column caption='aff+def_percentage' datatype='real' name='[Calculation_2664723607961251851]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100-[Calculation_2664723607960698890]' />
      </column>
      <column caption='Asylum' datatype='real' name='[Calculation_2827979095090774017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_2664723607941021698])+SUM([Calculation_2664723607940784129])' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_2827979095180816386]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE([Calculation_2664723607946874886])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;China, People&apos;s Republic&quot;' value='China' />
          <alias key='&quot;Congo, Democratic Republic&quot;' value='Congo (DR)' />
          <alias key='&quot;Congo, Republic&quot;' value='Congo' />
        </aliases>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Serbia and Montenegro (former)&quot;' value='&quot;Serbia&quot;' />
        </semantic-values>
      </column>
      <column caption='F1 (df region.csv)' datatype='integer' name='[F1 (df_region.csv)]' role='measure' type='quantitative' />
      <column caption='F1 (df year.csv)' datatype='integer' name='[F1 (df_year.csv)]' role='measure' type='quantitative' />
      <column caption='Number (df region.csv)' datatype='real' name='[Number (df_region.csv)]' role='measure' type='quantitative' />
      <column caption='Number (df year.csv)' datatype='integer' name='[Number (df_year.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;North&quot;' value='North America' />
          <alias key='&quot;South&quot;' value='South America' />
        </aliases>
      </column>
      <column caption='Type (df region.csv)' datatype='string' name='[Type (df_region.csv)]' role='dimension' type='nominal' />
      <column caption='Type (df year.csv)' datatype='string' name='[Type (df_year.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;aff&quot;' value='Affirmative Asylum' />
          <alias key='&quot;def&quot;' value='Defensive Asylum' />
          <alias key='&quot;ref&quot;' value='Refugees' />
        </aliases>
      </column>
      <column caption='Year (df region.csv)' datatype='integer' name='[Year (df_region.csv)]' role='dimension' type='ordinal' />
      <column caption='Year (df year.csv)' datatype='integer' name='[Year (df_year.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='df_country.csv' datatype='table' name='[__tableau_internal_object_id__].[df_country.csv_D1063372ED41444FB48422289007FDAD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_region.csv' datatype='table' name='[__tableau_internal_object_id__].[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_year.csv' datatype='table' name='[__tableau_internal_object_id__].[df_year.csv_034A61264C954A32AE4E52FFE6205E01]' role='measure' type='quantitative' />
      <column caption='refaff_percentage' datatype='real' name='[ref_percentage (copy)_2664723607978516493]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_2664723607960514569])+SUM([Calculation_2664723607941021698])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])+SUM([Calculation_2664723607960514569]))*100' />
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2664723607960514569]' derivation='Sum' name='[sum:Calculation_2664723607960514569:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number (df_region.csv)]' derivation='Sum' name='[sum:Number (df_region.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number (df_year.csv)]' derivation='Sum' name='[sum:Number (df_year.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number]' derivation='Sum' name='[sum:Number:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2664723607946874886]' derivation='User' name='[usr:Calculation_2664723607946874886:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2664723607947771911]' derivation='User' name='[usr:Calculation_2664723607947771911:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2664723607960698890]' derivation='User' name='[usr:Calculation_2664723607960698890:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2664723607961251851]' derivation='User' name='[usr:Calculation_2664723607961251851:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2827979095090774017]' derivation='User' name='[usr:Calculation_2827979095090774017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ref_percentage (copy)_2664723607978516493]' derivation='User' name='[usr:ref_percentage (copy)_2664723607978516493:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country)' hidden='true' name='[Tooltip (Country)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ighos/OneDrive/Documents/Portfolio/US Asylum/Cleaned data/df_country+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/24/2023 02:30:37 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='df_country.csv_D1063372ED41444FB48422289007FDAD' table='[Extract].[df_country.csv_D1063372ED41444FB48422289007FDAD]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='df_country.csv_D1063372ED41444FB48422289007FDAD' table='[Extract].[df_country.csv_D1063372ED41444FB48422289007FDAD]' type='table' />
            <relation name='df_region.csv_7A4681C1054B40BDB3831E98853C4EEB' table='[Extract].[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]' type='table' />
            <relation name='df_year.csv_034A61264C954A32AE4E52FFE6205E01' table='[Extract].[df_year.csv_034A61264C954A32AE4E52FFE6205E01]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Country]' value='[df_country.csv_D1063372ED41444FB48422289007FDAD].[Country]' />
            <map key='[F1 (df_region.csv)]' value='[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB].[F1]' />
            <map key='[F1 (df_year.csv)]' value='[df_year.csv_034A61264C954A32AE4E52FFE6205E01].[F1]' />
            <map key='[F1]' value='[df_country.csv_D1063372ED41444FB48422289007FDAD].[F1]' />
            <map key='[Number (df_region.csv)]' value='[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB].[Number]' />
            <map key='[Number (df_year.csv)]' value='[df_year.csv_034A61264C954A32AE4E52FFE6205E01].[Number]' />
            <map key='[Number]' value='[df_country.csv_D1063372ED41444FB48422289007FDAD].[Number]' />
            <map key='[Region]' value='[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB].[Region]' />
            <map key='[Type (df_region.csv)]' value='[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB].[Type]' />
            <map key='[Type (df_year.csv)]' value='[df_year.csv_034A61264C954A32AE4E52FFE6205E01].[Type]' />
            <map key='[Type]' value='[df_country.csv_D1063372ED41444FB48422289007FDAD].[Type]' />
            <map key='[Year (df_region.csv)]' value='[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB].[Year]' />
            <map key='[Year (df_year.csv)]' value='[df_year.csv_034A61264C954A32AE4E52FFE6205E01].[Year]' />
            <map key='[Year]' value='[df_country.csv_D1063372ED41444FB48422289007FDAD].[Year]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='df_country+' increment-value='%null%' refresh-type='create' rows-inserted='2916' timestamp-start='2023-09-24 02:30:36.531' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[df_country.csv_D1063372ED41444FB48422289007FDAD]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>df_country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2600</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[df_country.csv_D1063372ED41444FB48422289007FDAD]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>df_country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type]</local-name>
              <parent-name>[df_country.csv_D1063372ED41444FB48422289007FDAD]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>2</ordinal>
              <family>df_country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[df_country.csv_D1063372ED41444FB48422289007FDAD]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>df_country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Number]</local-name>
              <parent-name>[df_country.csv_D1063372ED41444FB48422289007FDAD]</parent-name>
              <remote-alias>Number</remote-alias>
              <ordinal>4</ordinal>
              <family>df_country.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>370</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_country.csv_D1063372ED41444FB48422289007FDAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1 (df_region.csv)]</local-name>
              <parent-name>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>5</ordinal>
              <family>df_region.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (df_region.csv)]</local-name>
              <parent-name>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>6</ordinal>
              <family>df_region.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type (df_region.csv)]</local-name>
              <parent-name>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>7</ordinal>
              <family>df_region.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>8</ordinal>
              <family>df_region.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Number (df_region.csv)]</local-name>
              <parent-name>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</parent-name>
              <remote-alias>Number</remote-alias>
              <ordinal>9</ordinal>
              <family>df_region.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>182</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1 (df_year.csv)]</local-name>
              <parent-name>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>10</ordinal>
              <family>df_year.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (df_year.csv)]</local-name>
              <parent-name>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>11</ordinal>
              <family>df_year.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number (df_year.csv)]</local-name>
              <parent-name>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</parent-name>
              <remote-alias>Number</remote-alias>
              <ordinal>12</ordinal>
              <family>df_year.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type (df_year.csv)]</local-name>
              <parent-name>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>13</ordinal>
              <family>df_year.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_year.csv_034A61264C954A32AE4E52FFE6205E01]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607961251851:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2827979095090774017:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Calculation_2664723607960514569:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607947771911:qk]:1&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_region.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607950831624:qk:1]&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607947771911:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607960698890:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1edaj3b15vygln1cflsen19wexfd].[usr:ref_percentage (copy)_2664723607978516493:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo, Democratic Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Unknown2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo, Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia and Montenegro (former)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Soviet Union (former)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;All other countries1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China, People&apos;s Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#b07aa1'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;North&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;South&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Tooltip (Country)]' type='palette'>
            <map to='#499894'>
              <bucket>(&quot;Bangladesh&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Cuba&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Iran&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Moldova&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Somalia&quot;)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(&quot;Vietnam&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Afghanistan&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Cameroon&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Ghana&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Latvia&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Romania&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Turkey&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Angola&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Colombia&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Haiti&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Malaysia&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Senegal&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;United Arab Emirates&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Bolivia&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Egypt&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Jordan&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Nepal&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Sri Lanka&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Belarus&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Djibouti&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Iraq&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Mongolia&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;South Africa&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Yemen&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Armenia&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Congo\, Republic&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Honduras&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Mali&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Serbia&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Unknown2&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Burundi&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Gambia&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Kyrgyzstan&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Peru&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Togo&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Albania&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Central African Republic&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Guatemala&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Lebanon&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Russia&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Turkmenistan&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Burkina Faso&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Fiji&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Kosovo&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;North Macedonia&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Tanzania&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Azerbaijan&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Congo\, Democratic Republic&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;India&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Mauritania&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Serbia and Montenegro (former\)&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Uzbekistan&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Bosnia and Herzegovina&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;El Salvador&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Kazakhstan&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Nicaragua&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Sudan&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Brazil&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Eritrea&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Kenya&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Niger&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Syria&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Burma&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Gabon&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Kuwait&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Pakistan&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Thailand&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Cambodia&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Georgia&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Laos&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Philippines&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Tunisia&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Benin&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Dominican Republic&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Israel&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Montenegro&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;South Sudan&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Zimbabwe&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Bahrain&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Cote d&apos;Ivoire&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Indonesia&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Mexico&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Sierra Leone&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Venezuela&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Algeria&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Chad&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Guinea&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Liberia&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Rwanda&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Uganda&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Bulgaria&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Ethiopia&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Korea\, North&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Nigeria&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Tajikistan&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Bhutan&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Ecuador&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Jamaica&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Morocco&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;Soviet Union (former\)&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;All other countries1&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;China\, People&apos;s Republic&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Guyana&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Libya&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Saudi Arabia&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Ukraine&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;ref&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#98d687'>
              <bucket>&quot;aff&quot;</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>&quot;def&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Number' />
        <field-sort-custom-order field='Calculation_2664723607941021698' />
        <field-sort-custom-order field='Calculation_2827979095090774017' />
        <field-sort-custom-order field='Calculation_2827979095090479104' />
        <field-sort-custom-order field='Calculation_2664723607940784129' />
        <field-sort-custom-order field='Calculation_2664723607960514569' />
        <field-sort-custom-order field='Calculation_2827979095183015939' />
        <field-sort-custom-order field='Calculation_2664723607946874886' />
        <field-sort-custom-order field='Calculation_2827979095180816386' />
        <field-sort-custom-order field='Calculation_2664723607946350596' />
        <field-sort-custom-order field='Calculation_2664723607946072067' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df_country.csv' id='df_country.csv_D1063372ED41444FB48422289007FDAD'>
            <properties context=''>
              <relation connection='textscan.0lhac4414xfaj717y0g4t1eqmx7j' name='df_country.csv' table='[df_country#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Type' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Number' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_country.csv_D1063372ED41444FB48422289007FDAD' table='[Extract].[df_country.csv_D1063372ED41444FB48422289007FDAD]' type='table' />
            </properties>
          </object>
          <object caption='df_region.csv' id='df_region.csv_7A4681C1054B40BDB3831E98853C4EEB'>
            <properties context=''>
              <relation connection='textscan.0lhac4414xfaj717y0g4t1eqmx7j' name='df_region.csv' table='[df_region#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Type' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                  <column datatype='real' name='Number' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_region.csv_7A4681C1054B40BDB3831E98853C4EEB' table='[Extract].[df_region.csv_7A4681C1054B40BDB3831E98853C4EEB]' type='table' />
            </properties>
          </object>
          <object caption='df_year.csv' id='df_year.csv_034A61264C954A32AE4E52FFE6205E01'>
            <properties context=''>
              <relation connection='textscan.0lhac4414xfaj717y0g4t1eqmx7j' name='df_year.csv' table='[df_year#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Number' ordinal='2' />
                  <column datatype='string' name='Type' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_year.csv_034A61264C954A32AE4E52FFE6205E01' table='[Extract].[df_year.csv_034A61264C954A32AE4E52FFE6205E01]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (df_region.csv)]' />
            </expression>
            <first-end-point object-id='df_country.csv_D1063372ED41444FB48422289007FDAD' />
            <second-end-point object-id='df_region.csv_7A4681C1054B40BDB3831E98853C4EEB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (df_year.csv)]' />
            </expression>
            <first-end-point object-id='df_country.csv_D1063372ED41444FB48422289007FDAD' />
            <second-end-point object-id='df_year.csv_034A61264C954A32AE4E52FFE6205E01' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1_A9642DE5462C4D579666A22B87C2161A]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard' type='sheet'>
        <exclude-sheet name='All Types' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='All Types' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action2_73DB1E677B6D49EF9D2B34A93A4121E2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='WordCloud' />
      <command command='tsc:brush'>
        <param name='exclude' value='All Types,WordCloud' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Aff-Def'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count by Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_country+' name='federated.1edaj3b15vygln1cflsen19wexfd' />
          </datasources>
          <datasource-dependencies datasource='federated.1edaj3b15vygln1cflsen19wexfd'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;China, People&apos;s Republic&quot;' value='China' />
                <alias key='&quot;Congo, Democratic Republic&quot;' value='Congo (DR)' />
                <alias key='&quot;Congo, Republic&quot;' value='Congo' />
              </aliases>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Serbia and Montenegro (former)&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Number]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;aff&quot;' value='Affirmative Asylum' />
                <alias key='&quot;def&quot;' value='Defensive Asylum' />
                <alias key='&quot;ref&quot;' value='Refugees' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number]' derivation='Sum' name='[sum:Number:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edaj3b15vygln1cflsen19wexfd].[Tooltip (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action - Aff-Def]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;All other countries1&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea, North&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Macedonia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Soviet Union (former)&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Unknown2&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</column>
            <column>[federated.1edaj3b15vygln1cflsen19wexfd].[Tooltip (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' field-type='quantitative' major-origin='0.0' major-spacing='30000.0' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' scope='rows' value='false' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Type:nk]' value='Arial' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]</rows>
        <cols>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Type:nk]</cols>
      </table>
      <simple-id uuid='{427EEAFC-04BE-4913-8582-36A765CB0D4A}' />
    </worksheet>
    <worksheet name='All Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_country+' name='federated.1edaj3b15vygln1cflsen19wexfd' />
          </datasources>
          <datasource-dependencies datasource='federated.1edaj3b15vygln1cflsen19wexfd'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;China, People&apos;s Republic&quot;' value='China' />
                <alias key='&quot;Congo, Democratic Republic&quot;' value='Congo (DR)' />
                <alias key='&quot;Congo, Republic&quot;' value='Congo' />
              </aliases>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Serbia and Montenegro (former)&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Number]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number]' derivation='Sum' name='[sum:Number:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edaj3b15vygln1cflsen19wexfd].[Tooltip (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action - All Countries]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;All other countries1&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea, North&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Macedonia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Soviet Union (former)&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Unknown2&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</column>
            <column>[federated.1edaj3b15vygln1cflsen19wexfd].[Tooltip (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' scope='rows' value='false' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year:ok]' value='234' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year:ok]' value='-90' />
            <format attr='font-family' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' value='Arial' />
            <format attr='font-family' field='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year:ok]' value='Arial' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.097955800592899323' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.20790055394172668' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk] + [federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk])</rows>
        <cols>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{14170548-2790-49BA-BE81-6C3CF73454AC}' />
    </worksheet>
    <worksheet name='All Types'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#898989' fontname='Arial'>Overall Asylees and Refugees Count in USA by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_country+' name='federated.1edaj3b15vygln1cflsen19wexfd' />
          </datasources>
          <datasource-dependencies datasource='federated.1edaj3b15vygln1cflsen19wexfd'>
            <column caption='Number (df year.csv)' datatype='integer' name='[Number (df_year.csv)]' role='measure' type='quantitative' />
            <column caption='Year (df year.csv)' datatype='integer' name='[Year (df_year.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Year (df_year.csv)]' derivation='None' name='[none:Year (df_year.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number (df_year.csv)]' derivation='Sum' name='[sum:Number (df_year.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]' field-type='quantitative' major-origin='0' major-spacing='100000' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]' scope='rows' value='false' />
            <format attr='width' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]' value='44' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='1' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#b4b4b4' />
            <format attr='stroke-size' value='2' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial'>Year: </run>
                <run bold='true' fontname='Arial' fontsize='11'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year (df_year.csv):ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial'>Overall count: </run>
                <run bold='true' fontname='Arial' fontsize='11'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial'>Year: </run>
                <run bold='true' fontname='Arial' fontsize='11'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year (df_year.csv):ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial'>Overall count: </run>
                <run bold='true' fontname='Arial' fontsize='11'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]' y-index='1'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Arial'>Year: </run>
                <run bold='true' fontname='Arial' fontsize='11'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year (df_year.csv):ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Arial'>Overall count: </run>
                <run bold='true' fontname='Arial' fontsize='11'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk] + [federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number (df_year.csv):qk])</rows>
        <cols>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year (df_year.csv):ok]</cols>
      </table>
      <simple-id uuid='{B767B6DA-ABD9-42BD-B95C-2FC2AEC4E2A9}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_country+' name='federated.1edaj3b15vygln1cflsen19wexfd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1edaj3b15vygln1cflsen19wexfd'>
            <column caption='def' datatype='real' name='[Calculation_2664723607940784129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Type] == &apos;def&apos; THEN [Number] ELSE NULL END' />
            </column>
            <column caption='aff' datatype='real' name='[Calculation_2664723607941021698]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Type] == &apos;aff&apos; THEN [Number] ELSE NULL END' />
            </column>
            <column caption='aff_percentage' datatype='real' name='[Calculation_2664723607946874886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_2664723607941021698])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])))*100' />
            </column>
            <column caption='def_percentage' datatype='real' name='[Calculation_2664723607947771911]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_2664723607940784129])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])))*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;China, People&apos;s Republic&quot;' value='China' />
                <alias key='&quot;Congo, Democratic Republic&quot;' value='Congo (DR)' />
                <alias key='&quot;Congo, Republic&quot;' value='Congo' />
              </aliases>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Serbia and Montenegro (former)&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Number]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;aff&quot;' value='Affirmative Asylum' />
                <alias key='&quot;def&quot;' value='Defensive Asylum' />
                <alias key='&quot;ref&quot;' value='Refugees' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number]' derivation='Sum' name='[sum:Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2664723607946874886]' derivation='User' name='[usr:Calculation_2664723607946874886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2664723607947771911]' derivation='User' name='[usr:Calculation_2664723607947771911:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;All other countries1&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea, North&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Macedonia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Soviet Union (former)&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Unknown2&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[Longitude (generated)]' field-type='quantitative' max='21138666.654256631' min='-15331323.465196682' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[Latitude (generated)]' field-type='quantitative' max='9129349.0906400904' min='-4376612.9978239806' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' />
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607947771911:qk]' />
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' />
              <color column='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' />
              <geometry column='[federated.1edaj3b15vygln1cflsen19wexfd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#666666' fontname='Arial' fontsize='12'>Country:</run>
                <run fontcolor='#666666' fontname='Arial' fontsize='16'>Æ </run>
                <run bold='true' fontcolor='#666666' fontname='Arial' fontsize='16'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666' fontname='Arial' fontsize='12'>Overall Count:</run>
                <run fontcolor='#666666' fontname='Arial' fontsize='16'><![CDATA[ <[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#72b966' fontname='Arial' fontsize='12'>Affirmative asylum:</run>
                <run fontcolor='#72b966' fontname='Arial' fontsize='16'><![CDATA[ <[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]> % ]]></run>
                <run fontcolor='#000000' fontname='Arial' fontsize='16'>| </run>
                <run fontcolor='#f17b79' fontname='Arial' fontsize='12'>Defensive asylum:</run>
                <run fontcolor='#f17b79' fontname='Arial' fontsize='16'><![CDATA[ <[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607947771911:qk]> %]]></run>
                <run>Æ&#10;&#10;&#10;</run>
                <run fontcolor='#000000' fontname='Arial'>   Overall Count by Year</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Arial'><![CDATA[ <Sheet name="All Countries" maxwidth="500" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontname='Arial'>   Count by Immigration Process Type</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Arial'><![CDATA[ <Sheet name="Aff-Def" maxwidth="500" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1edaj3b15vygln1cflsen19wexfd].[Latitude (generated)]</rows>
        <cols>[federated.1edaj3b15vygln1cflsen19wexfd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5546B0CC-9B93-4BBA-BA4E-48A2BE66DE37}' />
    </worksheet>
    <worksheet name='Map(2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_country+' name='federated.1edaj3b15vygln1cflsen19wexfd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1edaj3b15vygln1cflsen19wexfd'>
            <column caption='def' datatype='real' name='[Calculation_2664723607940784129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Type] == &apos;def&apos; THEN [Number] ELSE NULL END' />
            </column>
            <column caption='aff' datatype='real' name='[Calculation_2664723607941021698]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Type] == &apos;aff&apos; THEN [Number] ELSE NULL END' />
            </column>
            <column caption='aff_percentage' datatype='real' name='[Calculation_2664723607946874886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_2664723607941021698])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])))*100' />
            </column>
            <column caption='def_percentage' datatype='real' name='[Calculation_2664723607947771911]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_2664723607940784129])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])))*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;China, People&apos;s Republic&quot;' value='China' />
                <alias key='&quot;Congo, Democratic Republic&quot;' value='Congo (DR)' />
                <alias key='&quot;Congo, Republic&quot;' value='Congo' />
              </aliases>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Serbia and Montenegro (former)&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Number]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;aff&quot;' value='Affirmative Asylum' />
                <alias key='&quot;def&quot;' value='Defensive Asylum' />
                <alias key='&quot;ref&quot;' value='Refugees' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number]' derivation='Sum' name='[sum:Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2664723607946874886]' derivation='User' name='[usr:Calculation_2664723607946874886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2664723607947771911]' derivation='User' name='[usr:Calculation_2664723607947771911:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;All other countries1&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea, North&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Macedonia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Soviet Union (former)&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Unknown2&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[Longitude (generated)]' field-type='quantitative' max='21138666.654256631' min='-15331323.465196682' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1edaj3b15vygln1cflsen19wexfd].[Latitude (generated)]' field-type='quantitative' max='9129349.0906400904' min='-4376612.9978239806' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' />
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607947771911:qk]' />
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' />
              <color column='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' />
              <geometry column='[federated.1edaj3b15vygln1cflsen19wexfd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#666666' fontname='Arial' fontsize='12'>Country:</run>
                <run fontcolor='#666666' fontname='Arial' fontsize='16'>Æ </run>
                <run bold='true' fontcolor='#666666' fontname='Arial' fontsize='16'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666' fontname='Arial' fontsize='12'>Overall Count:</run>
                <run fontcolor='#666666' fontname='Arial' fontsize='16'><![CDATA[ <[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#72b966' fontname='Arial' fontsize='12'>Affirmative asylum:</run>
                <run fontcolor='#72b966' fontname='Arial' fontsize='16'><![CDATA[ <[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]> % ]]></run>
                <run fontcolor='#000000' fontname='Arial' fontsize='16'>| </run>
                <run fontcolor='#f17b79' fontname='Arial' fontsize='12'>Defensive asylum:</run>
                <run fontcolor='#f17b79' fontname='Arial' fontsize='16'><![CDATA[ <[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607947771911:qk]> %]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1edaj3b15vygln1cflsen19wexfd].[Latitude (generated)]</rows>
        <cols>[federated.1edaj3b15vygln1cflsen19wexfd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AFFED0BD-B8A5-4497-8F04-CB5367C23482}' />
    </worksheet>
    <worksheet name='WordCloud'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#898989'>Country Name Size Represents Overall Count of Asylees and Refugees</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_country+' name='federated.1edaj3b15vygln1cflsen19wexfd' />
          </datasources>
          <datasource-dependencies datasource='federated.1edaj3b15vygln1cflsen19wexfd'>
            <column caption='def' datatype='real' name='[Calculation_2664723607940784129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Type] == &apos;def&apos; THEN [Number] ELSE NULL END' />
            </column>
            <column caption='aff' datatype='real' name='[Calculation_2664723607941021698]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Type] == &apos;aff&apos; THEN [Number] ELSE NULL END' />
            </column>
            <column caption='aff_percentage' datatype='real' name='[Calculation_2664723607946874886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_2664723607941021698])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])))*100' />
            </column>
            <column caption='def_percentage' datatype='real' name='[Calculation_2664723607947771911]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_2664723607940784129])/(SUM([Calculation_2664723607940784129])+SUM([Calculation_2664723607941021698])))*100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;China, People&apos;s Republic&quot;' value='China' />
                <alias key='&quot;Congo, Democratic Republic&quot;' value='Congo (DR)' />
                <alias key='&quot;Congo, Republic&quot;' value='Congo' />
              </aliases>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Serbia and Montenegro (former)&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Number]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;aff&quot;' value='Affirmative Asylum' />
                <alias key='&quot;def&quot;' value='Defensive Asylum' />
                <alias key='&quot;ref&quot;' value='Refugees' />
              </aliases>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number]' derivation='Sum' name='[sum:Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2664723607946874886]' derivation='User' name='[usr:Calculation_2664723607946874886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2664723607947771911]' derivation='User' name='[usr:Calculation_2664723607947771911:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;All other countries1&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea, North&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Macedonia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Soviet Union (former)&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Unknown2&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' direction='DESC' using='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' />
          <slices>
            <column>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' value='81' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='464' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='10130.5' field='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' max='20261.0' min='0.0' palette='red_green_gold_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Arial' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' value='Affirmative Asylum Percentage' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' value='box' />
            <format attr='fill-color' value='#fafafa49' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Arial' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' />
              <size column='[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]' />
              <lod column='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607947771911:qk]' />
              <text column='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#666666' fontsize='12'>Country:</run>
                <run fontcolor='#666666' fontsize='16'>Æ </run>
                <run bold='true' fontcolor='#666666' fontsize='16'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='12'>Overall Count:</run>
                <run fontcolor='#666666' fontsize='16'>Æ </run>
                <run bold='true' fontcolor='#666666' fontsize='16'><![CDATA[<[federated.1edaj3b15vygln1cflsen19wexfd].[sum:Number:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#72b966' fontsize='12'>Affirmative asylum:</run>
                <run fontcolor='#72b966' fontsize='16'><![CDATA[ <[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]> % ]]></run>
                <run fontcolor='#000000' fontsize='16'>| </run>
                <run fontcolor='#f17b79' fontsize='12'>Defensive asylum:</run>
                <run fontcolor='#f17b79' fontsize='16'><![CDATA[ <[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607947771911:qk]> %]]></run>
                <run>Æ&#10;&#10;&#10;</run>
                <run fontcolor='#000000'>   Overall Count by Year</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'><![CDATA[ <Sheet name="All Countries" maxwidth="500" maxheight="150" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000'>   Count by Immigration Process Type</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'><![CDATA[ <Sheet name="Aff-Def" maxwidth="500" maxheight="150" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontname='Arial'>&lt;</run>
                <run fontname='Arial'>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</run>
                <run fontname='Arial'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='14.547999382019043' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='185' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{F893B835-32DD-43B5-89BE-55EF9957E473}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2b2b2b' />
        </style-rule>
      </style>
      <size maxheight='1200' maxwidth='1400' minheight='1200' minwidth='1400' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98666' id='34' param='vert' type-v2='layout-flow' w='98858' x='571' y='667'>
            <zone h='98666' id='21' param='horz' type-v2='layout-flow' w='98858' x='571' y='667'>
              <zone h='98666' id='5' type-v2='layout-basic' w='98858' x='571' y='667'>
                <zone h='43871' id='3' name='WordCloud' show-title='false' w='98858' x='571' y='36460'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29579' id='8' name='Map(2)' show-title='false' w='67501' x='31928' y='6881'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6214' id='15' type-v2='text' w='53143' x='8642' y='667'>
                  <formatted-text>
                    <run bold='true' fontcolor='#898989' fontname='Arial' fontsize='20'>ASYLUM AND REFUGE IN USA</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontname='Arial' fontsize='8'>Æ </run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#898989' fontname='Arial'>Data from</run>
                    <run bold='true' fontname='Arial'>Æ </run>
                    <run bold='true' fontcolor='#898989' fontname='Arial'>dhs.gov</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='19002' id='22' name='All Types' w='98858' x='571' y='80331'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6214' id='23' is-centered='0' is-scaled='1' param='C:/Users/ighos/Downloads/American-Flag-Logo-Graphics-15141911-1.jpg' type-v2='bitmap' w='8071' x='571' y='667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='11' />
                  </zone-style>
                </zone>
                <zone h='6214' id='27' name='WordCloud' pane-specification-id='0' param='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' type-v2='color' w='37644' x='61785' y='667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29579' id='28' param='horz' type-v2='layout-flow' w='31357' x='571' y='6881'>
                  <zone forceUpdate='true' h='29579' id='36' type-v2='text' w='31357' x='571' y='6881'>
                    <formatted-text>
                      <run fontalignment='1' fontcolor='#898989' fontname='Arial' fontsize='12'>Is it easy to secure asylum or refuge in the USA? Well, that&apos;s a question with quite a few variables, and your country of origin plays a significant role.</run>
                      <run fontalignment='1'>Æ&#10;&#10;</run>
                      <run fontalignment='1' fontcolor='#898989' fontname='Arial' fontsize='11'>You see, there are three avenues to consider: affirmative asylum, defensive asylum, and refuge. Affirmative asylum is for folks not facing deportation proceedings. Defensive asylum, on the other hand, is for those already in the midst of deportation proceedings and can be quite the uphill battle compared to the affirmative route. Refugees typically seek resettlement from outside the U.S., and that&apos;s a distinct process.</run>
                      <run fontalignment='1'>Æ&#10;&#10;</run>
                      <run fontalignment='1' fontcolor='#898989' fontname='Arial' fontsize='11'>So, when it comes to ease, a higher percentage of successful affirmative asylum cases is a good indicator. To get a clearer picture, you can check out different countries&apos; data, showing the total number of immigrants to the USA and the percentage of successful affirmative asylum cases among them.</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='4083' id='35' type-v2='text' w='57643' x='857' y='37500'>
          <formatted-text>
            <run fontcolor='#898989' fontname='Arial' fontsize='16'>Country Name Size Represents Overall Count of Asylees and Refugees to USA</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='62' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98666' id='61' param='vert' type-v2='layout-flow' w='98858' x='571' y='667'>
                <zone fixed-size='53' h='6214' id='23' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ighos/Downloads/American-Flag-Logo-Graphics-15141911-1.jpg' type-v2='bitmap' w='8071' x='571' y='667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6214' id='15' type-v2='text' w='53143' x='8642' y='667'>
                  <formatted-text>
                    <run bold='true' fontcolor='#898989' fontname='Arial' fontsize='20'>ASYLUM AND REFUGE IN USA</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontname='Arial' fontsize='8'>Æ </run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#898989' fontname='Arial'>Data from</run>
                    <run bold='true' fontname='Arial'>Æ </run>
                    <run bold='true' fontcolor='#898989' fontname='Arial'>dhs.gov</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='29579' id='36' type-v2='text' w='31357' x='571' y='6881'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#898989' fontname='Arial' fontsize='12'>Is it easy to secure asylum or refuge in the USA? Well, that&apos;s a question with quite a few variables, and your country of origin plays a significant role.</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontcolor='#898989' fontname='Arial' fontsize='11'>You see, there are three avenues to consider: affirmative asylum, defensive asylum, and refuge. Affirmative asylum is for folks not facing deportation proceedings. Defensive asylum, on the other hand, is for those already in the midst of deportation proceedings and can be quite the uphill battle compared to the affirmative route. Refugees typically seek resettlement from outside the U.S., and that&apos;s a distinct process.</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontcolor='#898989' fontname='Arial' fontsize='11'>So, when it comes to ease, a higher percentage of successful affirmative asylum cases is a good indicator. To get a clearer picture, you can check out different countries&apos; data, showing the total number of immigrants to the USA and the percentage of successful affirmative asylum cases among them.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29579' id='8' is-fixed='true' name='Map(2)' show-title='false' w='67501' x='31928' y='6881'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43871' id='3' is-fixed='true' name='WordCloud' show-title='false' w='98858' x='571' y='36460'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6214' id='27' name='WordCloud' pane-specification-id='0' param='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' type-v2='color' w='37644' x='61785' y='667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4083' id='35' type-v2='text' w='57643' x='857' y='37500'>
                  <formatted-text>
                    <run fontcolor='#898989' fontname='Arial' fontsize='16'>Country Name Size Represents Overall Count of Asylees and Refugees to USA</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='19002' id='22' is-fixed='true' name='All Types' w='98858' x='571' y='80331'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E9233824-D1AC-4A52-B144-E943245BFD0E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='All Types'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map(2)'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='WordCloud'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F99B5538-990A-4FD6-BCE9-09ECF042B802}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A32FDC57-1ADB-4BA8-BB5B-C83A7B31CE09}' />
    </window>
    <window class='worksheet' hidden='true' name='Aff-Def'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1edaj3b15vygln1cflsen19wexfd].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{086A1A3C-70A5-4D81-B193-0E8153F3F467}' />
    </window>
    <window class='worksheet' hidden='true' name='All Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[Tooltip (Country)]</field>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</field>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A14AD4D-8764-4436-9429-52D2FD03943F}' />
    </window>
    <window class='worksheet' hidden='true' name='All Types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Type (df_year.csv):nk]</field>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Type:nk]</field>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year (df_year.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB06DDBB-F7F2-4B2F-8CC2-F0B2C307DF84}' />
    </window>
    <window class='worksheet' hidden='true' name='Map(2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9D4EB21-D390-44F4-ACD9-EE03336EF8E2}' />
    </window>
    <window class='worksheet' hidden='true' name='WordCloud'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='157'>
            <card pane-specification-id='0' param='[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Country:nk]</field>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Type:nk]</field>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[none:Year:ok]</field>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[usr:Calculation_2664723607946874886:qk]</field>
            <field>[federated.1edaj3b15vygln1cflsen19wexfd].[usr:ref_percentage (copy)_2664723607978516493:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AFB70CE-8D1F-4BA3-BE2A-9657B500EE0F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      ZGJDt56zTskAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aXMkSXom9niceZ84q6qP6Z6L7BkeuzJKa9SapJVMv6t/2JrJJFKk8eau
      yCE5M+zprkIVqnAk8s64Qx+yHscbjohEogoF1IHHDAYgMw4PD3/vw1Wv18uxAZ7nwbIseJ6H
      1WqFKIr0d0qpwrG2bUMphTzPkaZp4TulFGzbRpIk+jPXdTEcDpFlGWzbhmVZV+6vlMLZ2RnC
      MESSJMiyDJZlQSmlf1zXRRzHiKIIWZbpsfD8PN/4iNciTVN93bcBxy/B5+az9Pt9hGGI6XR6
      ZQ5rtRq+/PJLxHGMMAxRq9UQhiFs20az2Xzr8RGz2Qynp6dI0xR5niOOYyilMBgMcHFxgSzL
      Cu8+z3McHBygVquh0WgU1sDz588xn88L17csCz/96U/1O3pbvHr1CuPxuLC2toXt+/63wNXF
      TGRZhjRNEccxHMfBcrlElmXI87zw8rjIeB3Lsq4sPPPlp2kK3/fh+37h/mma4vT0FGEYwvM8
      ZFmG1WqFPM81IaVpqhcNFwqPJSEppbC3t4c0Td9ocgCUEvPbwJyDPM/1D5/p4OAArusiiqLC
      vYfDIRzHwbNnz2BZFrIsQ7fbRRiGel5uA77vw7IsPeccs2QwZec4jqPfpVIKWZbh9PRUn+O6
      LlqtFnzfR7PZvLXxJkmCxWKh373ruqXrrwy24zjfSq5K8MH5wwW0XC5hWZb+AVDgYMDVl1yF
      vb091Go1AEAcx7i4uIBt24iiCKvVCnEcYzab6cVASUFC4P34oFmWwfd92LYNx3FgWRbCMMRg
      MLjChW6C2+D+112Lz8Dn3N3dhed5mM1myPMcw+EQu7u7WC6XWCwWGAwGqNfrsG1bP/NNIBeH
      yfwmkwnSNMVqtSp8v2keVqsVgiBAu93WY+H6WC6XAADHcfDFF1+g1WrBcZwbjXcT+L6DIIDj
      OHBdV6+T696dHgW5Dy8IrB84jmPYtg3XdTGZTPQiTJIEQRDAdV292PijlEK73cZisajknuak
      n5ycaHUmTVMtXRqNhp5ATqj5UK7r4vHjx1itVri4uAAArarxeu12G7PZbLsZfUfYlpAuLi5g
      WRbq9Tr29/eR5zn6/T6UUlgsFkiSBJPJBJ7noV6vo9VqVUrwKgRBgGfPnqHRaKDX6yHPcyRJ
      gtVqhcVioaUSmeNwOEQQBBvnMIoizGYzDIdD/dlwOMR8PtfXVEqVqrpvA6rSy+UScRwDWK+v
      RqOBOI4L2okk/DzPYVuW9S0HFscxkiTRDw9cvjTf9wtqBI8jpLQg5zXPIZRS6HQ6WlymaYrp
      dIqDgwMkSaL1TMdxsLOzg9FoVFC1ylSr8XiM5XKpFwXFN3VYEvibcvNtxKmUSlXfS+klOSXF
      Np+TnJ6LTimFZrOJ+Xyu1dAgCDCdTrFYLNBqtbZeWGmaYjQaIQxDLWUXi0VhAQGX7zjLMriu
      iydPnmh1tApZlqHX6+l5UEpptWe1WmlCfhdwXRfz+VzPL5k01zV/yx+7Vqt9Kw1GuZDNl84L
      S9HCSednNBhNg1e+9CzLsFwuMZ1OEUURptMpHj16hPl8rkU+J7PZbGpJQqNsE/jQcowcl+M4
      +hmlisfx8fsy9eA6zsXvbdvW0qts/vg9j5GLXt5LXiPLMhwcHGgbLEmSgqEZxzGCIECn09lq
      cR0dHWE8Hhfes2QwnGfJOXu9npY2s9ms0qaSBjqvSWnW7XZvTe8vA20BqtV875vWjF2v178F
      UBBPJpfki/d9X19QLhhz0qVhZxKKvKZlWVpFMl8ssVqt3sgLI8fl+z7iONaE6TiOXmCO4+jn
      4XhNg57zIonAcRy94JIkge/7V+4vn7XqJZjzR1VELsher4d+v48sy3B2dqafA4CevziOMZ1O
      kec56vV6JSHkeY6zs7OCairnQGoA8vl3dnZg2zbOzs7g+75WS8sQhiFmsxniOEa9Xi/Yiu8S
      1CYsy0K73Ybv+wjDcKMTwylzV7quW1hw5Jqr1QrNZlMbSGUL03VdANADKdO7ykAuZKLK82Aa
      wKUP5zjo9/vwPA/Hx8fI8xxRFMGyrII71/d9bTjxmcqeTUpKepxarRb29vaglMLLly8Lky0d
      BWWqWxnKXJ87OzsAUHBGkBhpTFLVe/XqFTzPQ6fTKb0+deMwDPVnWZbh8ePHGI1GaDQa8H0f
      o9FIqz4AcHx8rG1CusY3MSU6NRqNxtaS6W3BNXpwcIAsyzCdTrWruAoFU5wiHChycWC9mKiG
      0H1Jw0aeL/+mlNgG5HwmqgxfGXOoclVS1yW35zH9fh+vXr3Sx5HI+FJphHueV3hxUmUIggDA
      WkJNp1NNPBK7u7tI0xRhGGK5XGrpaTIXzqGcb/7udrt6EUoJTQZDbwfnJMuyjS8cAA4ODtBq
      tTCdTpFlGfb39wtEE8cxOp0OTk9PMZvNChLC87zCvTbhLha9iXa7Ddd18ezZswLDqILDyTVR
      pdrwgvV6/YoYlPodX3SSJFrnBYoLmURynZ9900RvmmSKwHa7jeVyqY3vTqeDLMtQr9fx4sUL
      fX/TNpBqAAmZi5hqChdC2RiXyyV6vR4A6DFMJpPCQpeEmec5BoMBgiBAFEXodDrodruFZ+X9
      SPT00A2HQ7x48UKreGEYIs9zrQ+baLValVKCa+Lw8LDgGKEjQao0myQbDfWq+9w2PM+Dbds4
      Pz+H67raFtwEJSPBpljjw8oXxAXAiT8/P9fH0x0qz6edICUBud42BCD1ctM4pRQgR5TwfR97
      e3sYj8eI41jHLwDoyPHh4aEOuEkC5bWkRDR1bjk+My5RBRqD8/lcMxIpOdI0xddff40yprRa
      rfDy5Ut9nJyLTqeD/f19AMDTp08LEuCzzz67QgR0bW+jk0dRhKdPnyJJktL35HmeVr+q8Pjx
      40J84F3jxYsX2plyXSzAbjQa30r3XBnFkNJJELwodUH5nVwEXKAkAnm9skAWF7WpBkh1B7jk
      1DxHHkt4noezszMsFgut95cFdORiKvvNcUpilWPkNZgesIkIaIOQ+BuNhnbbRlGEZrNZqS9T
      P+92u0jTFFEUQSmFer2O3d1dPSbab3Ecw3Vd9Hq9KwudHrrVagXXdTeO2bIstFotbTeYruRe
      r4fhcKgjsWVYrVZwHAf1er3yPreJ8/Nz7fS4TgLYvu9/Kw8yXy4hDTq+6CiKUKvVruSGyGuZ
      hGF6U6pEKD/b2dlBvV7XXE2qKJzwsvPJkaS70QRTJKQL17yWHK/jOBgMBhgMBphOp4W5kHOz
      CTye88eF2u/3sbOzU3l+q9VCvV6H53kIwxBBEMC2bXz++edaulJHb7fb2u1oSpPFYoH5fI56
      vY7RaKRTGDaNl98vl8sr9hajv4PBAN1uF5PJpHC+bdvo9/u3Hv3dhHq9jtlstpXnUK8KTnyZ
      mDMXiFwQ0tgtsxl4TcmxJdc2B0m7gT/T6RSO42hPi/Sjb9I/Tb96GaQ+XzVZknB3dnbQbDZ1
      tJkwU0O2gTRigyDY6FY0QQP98ePHlfekdDHheR4mkwlWqxUePXp0xX1bhSAIdHCR80+pfHx8
      DNu20Wg0tCpG1Ot19Pv9SlvkXcD3fXietxXB2bVa7Vv+Q3XGfKFVC4icX+rB0ng0jT15nSrV
      xSSKOI51RFQGtqQoNj1FprrFoEwVcVcRkSRq3/e1MTedTguSw/R+bePulPNEBtJqta49D1i7
      Rnu9XoG7yznfJIVs20av19t64ROUFHxuaQBnWYaLiwt4nqdzlOI41gb0cDi8M/2foJPmOjWo
      QCLmApNcWy4yaYBSEjDnggYRdUszuFSmx0uUvTy6XnlfpliQc0vicxwHjuNoH32r1dL5QGma
      YjKZFLht1eSYBBtFEebzuc4vMc/vdDoYDAY4PT3FYrGonHA+T57nOs/HdV00Go2N52yaoyRJ
      8Pz5cz3OL7/8stSQrjpfwrSt5Dntdlu/zyiK9AKjDfTixQvU63W02220221EUYTJZHIv7lDf
      99HtdnFycrLxONv3/W+3GWBZQItGYbPZ1IuxjDPzbxm4IecssznKItEkNl5jZ2dH+7xNyUVX
      4N7ens4BWa1WOjp5Ex82x2lZllYDaIBKxiCjntSV5XXkvJGYKVVuyo1NjEYjnS4yGAyulSR0
      T0p7xBxj2dj5HpIkwd7eHoC1gSulPYNPdEkyD8uMqdwF0jS9oq6asF3X/XYb3fU6TkkjtUzN
      obSQ1yKHMq9rEhq5vuTISZIgiiIcHh5qjk+dmmrLYDCAUuvsyYuLC21wSk8Wr296NjiuMnVC
      LhzzeHJESifOT9l1+/0+BoPBraQHnJ+fI0kSbUibYO4ObYLz83McHx/j4uICi8VCu7TJRMIw
      xGg00qqjhPTmsG6AQUE6JoIg0AlxtVoNq9UKtVrtzgmAz2Imbkqo6yrCNl1cugWVUjopy4yK
      cmJpmNCF6nmeXjTy2DJvTJmR3ev1dCXUaDTCdDrVQSHf93FxcYH5fK45Pu0AOT7pSSojRr5U
      PiPzla4zsKq4aJIkaDab2NvbuzW9mG5ek9Hwft9//z0ajQYePXoEAPj+++9L/fYkBAaQXNfF
      4eHhtQYskxuZzMgg3meffXYrz/c2yPMcJycnmM/nmlAlHODS8yMtexo8pjojuadMxKL+TT+0
      uWC5sKlOsNqJi4l2BCOYxCYxfX5+rquQ+v0++v2+Hh8TsghWnjEFWOb1yOqy6yZT/q763ryW
      PN5xnFvPiizz9sh753lesDGYHFh2LCUXF/WrV69wcHCwUU1jrKDVauHg4ECXczLucR/qD0HX
      cBUsk/Nx8csLbNLJJdeJ47hQEseFLSPE0n9Pw5QpzBRV0rhm5qZEnufodrvY29vTL0aqMmma
      4tWrV/rl83iKYemBum7xm5FtmUFa5sEyxS0/k8l1d+kSdBwHw+EQ7XZbf1YVkJKZAHzOKIrw
      4sWLG7lpO50Oer0ekiTZ2h//LtHpdLRdKOF53rokEria787FZH4uF5XUk2V6c61WKwRnCPN6
      ZfovFzwXZafTKQTCgHUqw2AwuPJAdJUeHR0V/OxKKUynU60Tms9i2gUmqD5Jz4okVj6naRjz
      c97Hsix8/vnnd+oSVEoVUpIBFFRP02UsCVsyFaXU1m5anmtZlo7jbPJKvWsotQ460nmRZZlm
      1I50aRJVkd1tbkQ9WYpMTqgpWchxpMeFuifTk5l27bouVqsVdnd3S8c2mUwwnU71GMwiHwDa
      HpBjkH/LTFjpwjUzZOVzUWWgyldG1GQMNBrvG7LJAWGqdzK9w7LWBfJmzOM6KKVweHh4u4N/
      AyildGbufD6H7/taPbN93y/1Apnc0PTESJjnW5ali2c4AHJQKWKl6sG/uehkmxMOlnolMyR5
      fBAElUYO78PrlKlT/CEjaDQaOo4h4w/08FDaSdG+iavz2ZrN5q22L3lTMPJc5rGjisq55XNG
      UYSLiwud2t1sNgu21PsOKcGodrfbbVS6MuSClBxRQi5i03Cl75fcj8dITktII9xMcZD6Ot2t
      p6enOidGBuDoyuPx5lhN1yYJk4Ql04vb7TZGo5H2iJSNmy5BctTrXoBMbb4vSAZUFX/hfEi1
      lp9TlYzjuNTl+j5DqXWx16NHjzRDdOI4vqL7yRdNDiDD3oRUD8rcbyZo1G7yopRJGdNQpT4n
      H8w8x0yLKEvrKHsey7KwWCx0bIH339/fL6R+A9CJZ8fHx9e6RQeDwb3qwYRlWbqdinxHci4o
      qcscILyGbdvamE7TFIvFojLvn4zlfYDJhBxZNWMaP6ZdYKo6Ve5JLmQTYRjqXPyy61Tpl3Lx
      Sm4NVKseZQEoWRgPXM2rp5rDkk8yh1arpQ17Gd9gP55t3Kf35QYsAxcwA4NAefQd2JwHRmwK
      NAFr+2wwGLztsN8JHL5Y6Z6kvi+bUAG4osdXLVpZDyzBxWL6Zas8J2XgIpXc1FSTyiC9GYR8
      Frp/adgmSaKNcUqFRqNRYBL0rXc6nWtL726S63MXMD1rJiOQ3J/vSzJG6eRgjKUMbKGSJMmd
      pUPfBA576fBhWUUVRVGpyC4z/kxJIYtDyLXJPaMo2liNJINiUvWhmiartYCiEctxlNXnep5X
      KEaR4Ms3uZoEuSVtDhr6zMPZhE3S7b5AT0gZw5CeNJMJ8jt65zapNrQZlFIYjUY6f+h9gkMj
      h1G8Z8+e6d9lnNxMHZDeE/ljEgJwOXkMjEmDVdoY8jpy8qXkkV6KPF/n1rTbbUwmE+1CDYIA
      jUYD4/EYX331FU5OTpBlme5CR2yjnkji4liPjo42in45Z5zL9wFZlhWaAgBFCSAj9jweuFrM
      dN280ZvHxsrvoxRwarUaZrMZer0evv/+e70I2Y+Ti0mCi5uL30yX4AIhF5ZBMdkIV/426wiA
      q/q99EpJDm/b6+7Iz58/x+7uLgaDAUajEXq9HhzHwZdffokffvgBnU4HzWZTEyETpZjgZqZh
      SJj2kYwBmJB5Uub57wP4/sxs3bJ6CnkObSIGthj5r0IYhlitVrBtW6dPt9vt98oecvb29jAc
      DjGdThEEAZrNJk5OTrCzs4MXL15oT490EwLl+S7SayLTo6mSVMURpAfiTSfnxYsX2NnZwXK5
      1O0EWY63Wq3QarVwfn6OxWKh61fNuIEZFTYNQxnX4G9JGGQGZSne78tLZ6TcHA+f2WRO5nPI
      DhFBEGzM81ksFtqWtCwLZ2dnOlX6fYHtOM63z58/1/nbWZah3+/j+PgYn332GWaz2ZWgFcUj
      Pyc3lK4zmS8j9W55HWlw0giVvvmyPJ2yoBu/n81mOqeIFUmc/OPjY0ynU8znc63H8178LZ+n
      zCtiVnFJicffZbER+p+pd/Oz+wC7YNC4l2qmDBpKm0vGBHgMW7WzF6dZncbAGa/LJsqz2ezO
      GmVtA4ueAFnk4Ps+sizD06dP8eTJk0ItcNXAuRgkl+SkyMhumcuM3LOMK0liMT1VstenVDd2
      d3fR7Xb1y2VzWeYZSYkm1bmyWAcL0asCbAyclQWWpAp3cXGB77//Hj/88MO1RRrvEuTYUtJJ
      cJ4kIch540+SJDg/P8dkMsF4PC5cZzQaFVq4LBYLrRLKYqH3AfaPf/zjb5m2wEJq5q0wFYEN
      aoGrMYKqSLH0t3OBUTJIo1mKSClhyjwUsvxOwpxQpmcnSaJ7Q0pvhtTPJffjOIlut6tVKGnE
      VnlOTCI2JYEcr8zOvEuwiwe9Wpt6MkmODxRVP9mikfPs+z7Oz88L3aMlw6IHEKjOSL1rWAB0
      ajH7/7O5KnuuNxoNHX01Ux6Ay7RmuQBk8bRUW7g45TU2SRYTUl3hj0y7lnUFstmVJB7TeJXG
      tUSer+sKoiiC4zjagK4aV+kEW9YVY54u3vvCcDjE3t7eFUbCudk0NnPu+HxRFOH4+FinjpjM
      kNen7XDfKdKEXpk0XFnZQ/HX7XZxdnaGwWBQUF8k5y/LsJQuUqoIhEkEJsoWooz8mh3opPrC
      RS49SbLQh88lOZupQhGTyQTn5+cFN+ubuDJNIqCOfJ/gNkUmQzMZFnC5NqQb01Qp+VOmVskE
      QmBtHL948eLa/Km7gH5S3/fRaDRQr9eRJIluK9HpdLQUAC5TaWn0SpWEkkDGCqQBuO3eTZu4
      rKlm8J78MblPmYQx4xLdbrc0150qAj0X5p5d8rjBYLAxKGQuLDbWuk/QTiKkISzBsXPuKWnL
      3pM5P9JBUavV9Jq4TwkoUSD1fr+vxTNz113XRb1ex8nJCQ4PD5HnuebgJrclBzb933LSgNvv
      E296ceTLKgNVInq8GPOoAl9cVYuPPM9165VNkBHwTTGHuwJbzFwH+f6qFr481ryHlMJkYpZl
      XdvF+i5wZSXu7OzoANFgMEAURYUOx5ZlaTdjGSQxSA+NrP8t85Obwa1tIUWvNKhNkDDMSOTF
      xQXOzs4KBFB2jTJjFlgbc3RvbqPXcrwsz1ytVjg+PsbLly8xGo3unCi2zVGSDIYqUdlYTZc5
      P5OJhLQ1xuPxvRPBlbi0pFQWP8RxjOFwiPF4jG63iyAISv3xhPS2cOHwulWLfFO6wG35zkmQ
      popkvkg5RobxpStUnsudW16+fLn1+JhPz2ZWxGq10j76ZrN5a56STSkI20hj0x1tMjmCn8tN
      O3h/zqP5+XXR5HeNK0+f5zn29vb05mLk2gB0B2P2pJR+eeBqgExGhPO8ulc9uafU46U98TZc
      Ufr2y1yo1y3adruNXq9XqrPn+bov5tnZ2VbX2gYc32g00l65twWDkmXXKvN+lcGMeJdJSdOZ
      UBbAlHYcu/bdJ0rJv1ar6fz34XCot+FUSuHk5ATL5RJffPEF6vV6oW6UD0c1R+4hRtXJLJow
      XwC9DYzkSkIo6xckPUBlL7LKxUnQfVuVpsHkuSpRzWj2bYGtW4DLHdvfVi1iV7wyO0emoHie
      p5uNmceUMToTZucFOTdyLUj3+X0nx1XKv1qthlarhTiOcXZ2pj1ESq1Tgo+OjnQ/TFPnk2kR
      0mVJUdhut3W7b9YiyPoDGZmlX9r0LsmXYnqBJBiL4CI3jXSiintzy9a7AIOPckxxHL/VJt/A
      5YIty8Fhz38GtNg1uoy73xTSRR6GoU6fANbEEobhvXvD7L29vW83HeA4ji6i5l60MpeGblFT
      JJpGKRdYHMeo1Wp6lxRpLHOxsra3bDFLjm7m3pS5PGVCnpnLI6+7jWtWZkzeNuhFKrMzuHk1
      j7upqmXbtq7PlpjNZoXUBL5rM7VBXuemkPPGgBlw+S4ZtGQu2l3jWgsoiiJ0u90rLQGlymOq
      IJIYTIMzy9Y7+cnEMH4n3WWFQQqRy5YrvV5P9580bQ/etyx/R16/LEpbhbLUjNuC3ISuTLVg
      7GQ6neL4+PjGO96XRdrJfaWKymMJBjFlW5htUMZQJPPhMWQm3LTjPnAtATA3yHVdjMdjeJ5X
      sAkoVk09Ebh8cSZnIzHJcyQBmC5RubiZiLVYLPSGDdIlJ338wCUx8nszAmyCaQLmQnwX7kmp
      IppG5iZim0wmODs7w2g0wnw+x3w+192hrwPTO0ajkf7MzMOS0rvRaBQ2nr4OjuPouIn5rLyu
      NJblb7mT5l3hWgskz3N4ngff93U7kixb94nZ3d3Fd999B+DyQWjsmIvYrAfg4pUpFZIbSaOJ
      45A70piEJe9lFnvwszKjSxbzcBxVev82EmCTy9Z0uXKxy+J0+XlVbIQuagAFFSbLMgwGg8pE
      uziOMRqN9J5dvJb5bsg0ut0usizT2ZymVJfFUMBlwDDPczSbTZ1DJe2MshR3pZRurJvn630T
      mKbxrqSuvvc333yzFblRdyPHt6x1oTg3h5aclotX6t36hhV+d57HH9OzIiWF9DxRApDry5do
      cjUZZygblyQaGoUSTIeoAsciVUWiVqthOBxiMplocS89PnLM8sXflCM2Gg30+/0r42L3bDkn
      jM9wUZr5SnInS4LVgjs7O7CsdWt07gvGnH8mxHGTau4uw5iSfDZenyoRPYj0Gu7t7b1TV+nW
      PijTg8DWIYRUT8oCYYS56Pi9TJkug+Q+0nCWmZXSHWu6J8mdzKouOS4SslSfTEIpE+3y86qX
      ZVlWoRLLXPzApeR6m+q4suCZZBrmmKqCZFIVOzg40Du/5/k6ldv3fbx8+RLNZlMTiOM4uvYX
      gN57QCml29XLd8T3JKWvVI25E9C9EwDzvRm+5wPUajXd/BS4uhneddyLHEh6d5gzzhdmvjS+
      GLoz6Sbl5zLnnNeVLlDz3qaKwRfCe5kEbNotMtUXqPaUyFaEVZJEMoBtA1Qmqu7PCL5Ul5Ra
      b3vUaDR01quUEK1WC1mW6U31OB9hGGpildyftRe8h+d52N/f12NiXQnvId+vnGspvd910tzW
      BDAajXTLwGaziSzLrngj6KuXBhQrwaogiUDqolI3l6qJrOCSuj6JgccARV2a9+Ln8jgJec2y
      BVhWjNPpdJDnua41rpIu5ISbGMPbGoCz2ay0CRXdjCSser2uYz3j8VhXA8qdOVkfLucvz/PC
      Rt/9fl/vQFOr1Qrvmg4UbsdKFanquZlr5jiO7kMahuHGOoy3xVYEUKvVdDcHJk/RX5+m6RXf
      LnNZqJ5wwzTpsdnkZ6YqJbmvyY23NUhpHzD7UBrYsqpJciLZKc+MM/DcdruNxWKhX5xS67Tq
      Fy9elKpJjJJWGba3hU1RaTl33C8hCAK9rSi5uW2vW8ocHx8XpKEMRjIfbDKZoNVqYTqdIssy
      3bMVWBMjy1GpLle9tzxfb+Ixn88LWbfsvZRl2ZWdMW8DW9sA/X4fZ2dnhQegO7TX6+nd+KjG
      SA5OApE7tkuuYhp8YRjqugS5r5c01Ex9eRMoLcidy9SeKkNdplZzDL7v6zwWFnvw+FarVeqn
      ZyDqJtmPpodsG1QlEyql9NiUWqe0SOcD9XtJJGaCY1kFmWyVQjU5DMNCQtw242c5JSUlwTUD
      AMfHx3jy5MlWCXzbYusrkfPJBrGe56Hf72txKq15mQ5BPb0sH4SQhqssaZRcs6yU8kYPW5LD
      Il+sTLuQ20Px/nw53W5Xv3QZpQVQ6gPnM9y0Akre9zpwPqjPP336VHubpHSTxxOyProqpcSc
      b/YGorTwfR/1er2gypSNsQzSDizLMuZ519UivAm2JgCl1jXCVb5ZVntJLwoXlzRWzaQ2UxJQ
      /5cGsUyO2yYpqwzSEOaLZuKdtB8kQdBLYrrrgiDQHo4oiq64Mk3wOjdNo+CCKIvS8l4yM9O2
      bcxmM3S7XTx+/PiKvl2W+9/pdNDtdq9IwbLM2aq5ZqoM4wvM75Jzyy1hy9bOpqxfyfzeRarE
      jWSJ67ro9XqlRu3Ozo7eVlOKP/Ohyv6Xky27RpBYGBSRXgZpyG7DIaVUorG9yeDk9aX6Q7AV
      CCXCYrHQe2jZtn1lE4xt7mN+xh+ZS1XmNZHqI3/Y+tFMP+d+BvL/Xq+nCVhm8lalpFR9x2dc
      LBY6V0zu8eZ5ng50lYEqqkxPkS5mStDbtp9urEyx64IE1ZfhcHglmCK5thlokp6ZlTEAACAA
      SURBVA8oXzZ/eP5yudTEZXKL67gqo8fyODNGUAYeQ6JhHTTPY2dpjn08Hutzy7pfV42tLK/+
      uqo2jq9szJRg5juqmq/RaFQ4VkqdsnHLNAn+lD1rr9cruM3pJZK2lLyXtA3JRMuaH9y2CnRt
      NmgZNgV7sizTHIXcXep30qgsW7ymWkOVipKAnFwGwzYRgZQsb8I9eG8ZRebvTqejDX4eN5/P
      0e/3MZ/PC4a06ZqVeVIEv+NCkItcVurJRcTzON/8ny5ZmcezXC51pz+CXJXcV6qgVfYa78WF
      SmcAn5XSWimljX8pefmcVdKN15aZBUzzuO3qsVtvV8zNsCWYMs3OcGUSwfQymJxCKaU7DfOa
      5jUkyrwYbwouRr4YSqbz83M0Gg0cHh7qZC5KrKrdUuS1TDvIPK4KZYuyzGglEQCXbktzvuT8
      8hpmQHPTHHN/YKkakbBpH1FyS7tLqqNSuvK4KIp071bHcbC7u1sae3pb3DoBMGhh6nEUy6Yq
      Qchz5Hn8W+qB12UnkjOViei3gTTqmCR2enqqx8QXP5/PN/YQksE8CTKBssV/k/JQqZ5MJhNt
      pI7H41Lvm6lukDPv7OxciZZLguAClu+OC1qmnNCVLW2MTTYYJddwOMT+/j76/T7Oz88L7Xlu
      C++kHq3f7+vACB+UL52L37aLLTmkSmROjuRMVInq9TqCIChwnTJU6bJvAhkllouAe+5Kv3qZ
      F8WEqbrw76rztvGEmM8bhiGCINi4N1sZdnZ2MJlMCqkpHJ80VMnlpbvWVNfkeK571izL0G63
      Cz2L2KWExHObuFUJwFLJIAiwt7eHVquluYvZHc58GeRuklh4XJl7Lk1T7Xc2F7jpGbotAqiS
      UovFAgcHB/p/SrkqMCVAKVVqT5V5z64DuWuZimO6Uq+rN2CuEjl32fzyMynNOQbHcQqqsFT5
      pLeqLK2kXq8XFn+e57qZsJnlehu4VQnANNnz83PtKpVGrExzLXOxAZdclqI1z68mrcmJZMZg
      2WSa/2+SFNtAvkRGgJVSuoNGs9nEdDpFmqY4Pz8vGJbmdQaDwbU6bVnG6E09IdLwlKrkpvmw
      LKvgGZLvAriU1tKwld4p/k0CkFteAZceNNaE8HnYgUM+Hwt9WJjzNu+vDLeuAjE6LMvt8jzH
      7u6u3pyCda3y4WW2pmkkb1IJyNHM6KX5wt42fC5fOscjo9tHR0d6/HzGKnGdJIlupVL1bK1W
      S6efyLTz6xaASSDmwpRqR9W1yLz4/kzbo0x689qWZWF3d7fSjSvPZZrDJrWGXqt+v4/lcqlj
      CreFWzeCLctCo9HAzs5OwQ26Wq0wHA7R7/e1qDQ5GT+X4DEyqMIFLa9hTrgMfMlrv4k6JH3U
      fMnSBbnJS0J0u93Cs21y39K7UvZcm8ZPjmyqjxw7GcY2dhEXprlAHcdBv98v2GnyWru7u1ck
      TZ6v92g4OzvDbDbTgbJNTAKALpFUSmEymRRS7/m8b4t3tmub4zg6LTfPc+2D7nQ6et/dMq4i
      uY2UEmX+b3nMtqKR51YFm8ogF6tMKSZ3vC5fZzAY6JSDbe6Z5+vUaubdy7Hz/LJ7mm5V+b2M
      v8hA1k3BWAxVT5ndy36yZaC7dDqd4tWrVwUX7aY54HMsFgskSYLJZII8X1e4cTegt8HWJZFv
      A5ZNknvu7+9DKaXFm/SsbOKK5GCmegNAcxVJDJJgZBSZ3hTT9y1RpWtzczhywCodWi6wg4MD
      ZNm6wZaMGG8Daf/I4JDpceGY5ZxI7s9xmx6ZKq+TvBfn3XxejoMdOni/IAh0ICzP80LVGLUB
      7ttWFdhK0xSnp6cFiSYNeX7med5bbb96JwSg1Dof/PT0FEqt04l/9rOf4eTkBBcXF1sHs1gr
      bNYMU2rIRDeCL6wsCCSPMesPZNVW2WLnwivbMKJsM/GDgwOtz8vS0Srkea4biHGTDsuyrnBO
      0zMlz5c/nudpAiAjMnV713XRaDR0Pj4dGLZtl2ay5vl63wRWji2XSz0+Eg6juNJLdh2UUnjx
      4oVWf8oCpzxOVpy9Ce6kL12erwukf/KTn2A0GuHi4kIbNPKlmAtC5v7zZTC3iC+EE83zqzpX
      bzK2pEojs0JlJFISlpQoJpRSerFJHfro6EhHjYMgQLvdxmg0qkwQ48LK83WhCANA5qbcfH7T
      xSzHKiVClcRzXRf7+/vIskz79jknjUaj1GNFAl0sFrqZlpRIZBwk+G2LWWS8h9cpQ5atyzUd
      x6mMvF+HO23MeHp6ilqths8//1ynDZgvD7iauFUlpnkMX5RUD6p05zLIRcLFTolRr9fhum6h
      hd+m8UjuymtT7ZK9jCaTCXZ2dnQ+EauzKCEODg70PDDQBqzzj9g0l2OWf8tnAlBJqPyO38dx
      jBcvXujPpQtXSgQSkW3baLfbek8wsydoo9HQddA0jLcBdX/piSo7hmDg7KbuYeJOCcB1XZyd
      nRXEcr1e1/ki0scOXA27y2imdM+laVpoX27aEmVcqUr9kMY2JVStVkOv1ys0k7pOfeGYJYc2
      x/7y5UttKzDP6dGjR7Btu1BfTA68Wq3QbDZ1Vz3pSjUX+U1cv2YGr1TrpIolJUmz2SykgUhH
      BaUHu0ncZGHOZjOMRqPC+zKdHmQorFG/uLgorYPeBndKAPV6vbBPr6mqlPmb5YvlouZiMb0k
      wOUCJrcyJ/AmHiMeP51O0e12MRgMdF7NNkE1jkVGRM3FxRfKyjqz1oKSw3EctNttrZZJ9UA6
      CCQTkP+XjZXzbRJA2XPwO2blWpalC+1t2y50ilBK6QKZNE1xeHi4NTGyaTKfgdKJDJOp8RcX
      Fzg8PMTZ2Rkcx8F4PNYbudwEd0oAeb7Ok+FL5oOZOUFl55kLV0oEqW5w8ZuLvuzvm0B6b2T3
      uzI3nLxH1YuXi67f71/plZrn6xQARkaTJNH7bPm+j+VyiXa7rTeqNo1aGVEHNhejV6GMcfi+
      r9vh7O/v66gxDVfel+MhsWwL01nBwJdUc+fzOR49eqSZ6Gq1wu7u7tb3kLjz5uz1el0bctIV
      KSOWZaCHh8fSqJLGkukuJGTInv9vC2kgly2iMklAI04Srhmd5TkMGLKDGlOBJ5OJlgjsyAGs
      05qVUrrrBut+JYPgmDbFJsg8pBPBTGngXPGHxyZJgoODA5ycnOjvBoOB9s7xefP8cjfMTbvU
      MKnxOiOZ8QC2oeH2Xefn55Wbr1yHOycASc2SYwNXVR6JMv83VaFNRqnETdQfcwGUSRYzJiHP
      ldFXU83gWGu1GkajEaIoQqvV0oEeXne1WukU4EajAcuyMJ1OEQQB6vU6Hj16VEir4JjKQEKK
      okgfI1Uw+Qz8jIvZfCfs/yMlLyGfk++IvYa4ETvfJedoNBphOBxufB+c/263qz9jn9r9/f2N
      527CvWzPQZXH1HerFhQ5E8WtuZiYXi0hg2ZmoMi85ya9lzDVGkqhMqRpqr06cgwckxnOZz9N
      SgESDo+nf53Xphrwm9/8Bnt7ezg8PNQ1ypZlVS7OLMv0rj5U3zY9JyWnSfz9fl9v6Cefr8zm
      sKx176But4swDHF6eoogCHB4eAjP83Ta/Hw+1zGUm2BTfGcb3AsBsDrJ87yC352Lw3wguauI
      ye1NY4/gMddtwVOmCvC6MulKqjHMd6L+XdZGxHVdBEGguadcLEzl5kKVUpCJb+ykBlwyCjaw
      4k49XPDdbhe2bWsi6vf7SJIEQRAUfPdZlmkjms9H45XXk7YNI95SYgDQcQ4ZUed3ZRI8iiJc
      XFyg1WppzxDfC4uH2FTgrnHnBCBVC6ownHzgsg8pUBTRhO/7Be9Rnq9zyPlCuJhNlymLVExR
      L+8DXL5ABoSqoJQqdLuTKNszWKYlS10auHTbSi7KXB82A9jb2ysQIZvVciPzZrNZqM31PE+r
      CFJ6EOTubF/I+yq1TmWQfnhJBHt7e1fiEMCacPf393F0dFR4zyTkxWKBi4sLTCaTQoCsXq+j
      0Wig2Wzey35hd35HTjbLCzkRMnglszYld5cGs7mIZK2wybH4NyVIFaReeh02VVjFcaz7oprX
      lwQmPTQyoMfv6VNnIYhU5SaTia5LXiwWGAwGaDQaejcfGp1sY2N2fiDKGtpyrqiSkMs/fvwY
      WZZhNBpdiQ0sFgv0ej0d1yFBUlLu7OzoJmLSocGNyu8Ld04Aph9cqjtluR7Slccd3csWc5Zl
      hXwX4HKLH5PzkehMQ1WmS1hWdRtDehzo7SlDmVEujXA5dhbXSHVIBnvkgo3jWEeMyZnpb4+i
      SKuVslah1Wrpqio51zJB0fM8DIdDrfYAxXwo27YLhU7m8wDA0dERfvSjH2nJGMcxjo+PC+0N
      pTF7W/sgvw3unACkuiH919tgE2fmDpSNRkPfg3q4JDp6NuRil9xRcr5NBjKj11WG+zbPYibc
      AUXJwIq38XiMnZ0dAND9M+WCIqT0Y/e6ZrOpg49yvDLNxHVdDIdDvHr1qnAMK9yUUlqd4jlS
      elHl7HQ62sZI01R3lqbNBEDbK+8L7oUAZPrzpuPMQAxwWYVVpq5QOnAhSG5GSF+1vJe8viQg
      BuskaKjK59jkcy9DEARwXRf1el1fT8YOSAiTyQSPHj0CUJ7yQCKRKgm3QlJKYTqdajuFu2/y
      HdC96vt+YfHzXvRiyYCjSTzcKUamogDQefuc216v91bemneFOycA6Qos42LmsfJvmc+/KWBW
      lgkpYapPJiFJnfg67r5tDMIEn4cdlctSIIA1cVHlotfIzCsaDocYj8ewbRutVgur1eqKUW1Z
      lk4zqNVqSNP1xoedTge/+93vSl3P0kg3s3Z5Ll3aZbEQYD3XrCB7H3HnBMBdSqQkKFtgXOjk
      SnICaeCZPm4z4lpGAGWR2TIf9nWEZl7PBI1y814mWKpJ1cG8puTusvpKEumrV6+ubD1LAqJK
      9+jRIwyHwyvPVFaZJT1p0mjnZ81mE/1+f+Pc7OzsYDabVW7Y977gzglAbpRwE92ZUoMGlplG
      bb7YTf2C6L8myjJEpZ4rOa6JqsIY+uG3eS6TQOSClB4Scm5zwbL6isav9P3T1siyDBcXFzoD
      tV6vI01TbUDzGSVTMueQn7H66zq874sfuGMCYJqsTH0ALtUiUy0xjSXTZVqlejA6WMZ9SUjX
      YdvjyBWpCtzUFgAuCZLGuHwuaaCzKQC9RiZqtRqOjo4K2aoymYznylgLUEwfl0RA4uP4pDr2
      seBOCYAvQurN0rd9HcgtZfTWXHAyZL9J9TDBFyx91Dfd0EIm3TFAdR3yPNf1sTS65R6+JhHK
      5D95DaUUPv/8c/zmN79Bo9HA3t4elFLayJ3P53j+/PmVwhWg3BlBiSLVrjiOdbeKjwX3lgwn
      /d4ywQ2oNjzLOhmUqTpUj1iPui3e1KUp78vfi8Xi2n2FiTxfV0ExiFRmkNP1KpPZeG6apvji
      iy/w9OlTtNtt7Ozs6JyfIAh06eV1eTOcN+Yn0VXM8VSVm37IuFMCoG+ZnJGcRergVH3KJpr6
      v3lNLjT5Am8SX7gJqojDJB52ituGAIDqhrlRFCGKIl2WyUit9OdnWYZGo6FrB+I4xtnZmW6t
      QvVHqp6m90oppQmQoH1ANYqbXHiep1M0PnTcuQSQHROkGiSN0JsuXuYVcQeb+XyuDcO3fUnS
      3cjfh4eHyPNc+7rb7TYcx8FoNEIYhnoj6W1beVuWpfvsmFBK4ezsTPvkpbSkexIAvvvuOwwG
      Ayi1zh6dTqeFRmNlwStzjjmHsupM2hKMG9xEtXzfcS/ZoMSm3By+sG0NUXYyGA6H6PV6OD09
      1S9OGsQykFP2Iqly0ACUC4edkhuNBvI8101cuVA+//xzxHGM6XSqtwqSUsE07En0NOyr1Avp
      EjbPJbitqWx+ZV6DY6hiMEop/YyO4+i4wce04E3cSxwAKLYz4SKVnogqT0cZpPr06tUrdDod
      LbpNtYmGZhUY+TV3uZEEwX0Ozs/PtWel1+thNpshCAL9N9OeaUiaBrrkrmwTA1R7ksxFay5M
      s2CHHblll+cyx4F8F9IGYb3A+5Cz865wL3EA6f6UBRf8DLhZ60JzIXDD5zKDdpvAluxhI+0U
      SqyjoyO9kCgx5PaxMq2Aefoyg1XeS3p8yuIJ143V/F/m59MJUCZJzWAacJmyXavV3qrb2oeE
      OyeATqeD0WhUyI2XufJAUUxz8W0Sw3zZPE9KhOu4ZhVkwhlVAubOf/PNN3j58iUODw9xdHQE
      27b133m+rk84PT3VzXlrtVrlTumy8qsqqkwD9roYA59Z5iiRyEzPUVlHO/7+mFUeE/dSFC+T
      zPgyyPHNF2XqvlWQEVNT1ye2KZ/jAuI4ZJcyekWOjo7Q7/dxcXGhDcPRaISDgwOsViu4rovR
      aITlcokkSXTXMvksMunsOverHBPVElPd4fPxMz4rz6U6xFiHjFFQ+i6XS91+5VPBvRjBZt4+
      I7tl9QBlL9pEWcSXn8trAUU9uswYNANFXPyy1XqWZXj+/Lk2EMfjMRzH0aqXrAdm+gY/4wKW
      92FCHLsjSKIwpaK0G5irI1UeuoXpDqXUcBxHxyY41yRWZpRyw+yPLdq7CfdCADKdmS9UFrZv
      ky69DUxD21x4ZRxXEpK5CImXL19CqfUujFLdKiNCelZkAFA+l1QD2TKmrPsEcKnSWJalc3la
      rZb23NB7JSUFf8Iw1IyHtQxsL8LODYPB4KPw7d8E9/K07BUvua+UAlww2+qiVcdJApAxBjMX
      aZvrm/cg0cqtPauCWTyf9zaro+Sm2/J86Y2R9+XWSVzM3DyELQrNPB9+F0VRoWfRfD4v9EJd
      rVaflP4P3BMBAOvKIKn2yHx/+vXNjfWqsIn7ShWC93mTVIcy37q8jvQKSZheLbnopXHK79k3
      h+e2221tkPu+r9ulk2szfiAL9E0JQjerjAVwDLVaDYPBQFfUfWq4NwJQal1kXa/X9QvnCyUo
      2q8roZOLuixYJI1DM7J7k/Fe54kqg3R9mgY+wfExEsvnZfYnawJMPz2vSclCXZ4RYxJDWQoJ
      sJ6309NTeJ6Hdrv9SRLAvUaCWZ5I7kdRLzk/syO3cQOaC0zGG8xyv00oM47LUgdklJnXLSvM
      MX3uDPLJ5D/aArI5VqPR0F0UpK0kiVr+8HO2juGcbYot0CZqNpsb5+Rjxb0SALDuMsatcOQi
      l0TACrCqKK7ZogO4XHTSJcprbMP9JQFxYbHvjmkc8zjZ5kUWltA4lSWGZeqUjHvITFJpKEtf
      v2ko27atm3UBVzvvlT0jJcv7VKh+l7h3AqjVaqjValgsFgW3KI09fkYiMLdH4vFlPXgkJ5YL
      7LqUXmk4M74giUkuMMnV+XdZFNt1Xd1O3CRUaaewWRUNWVaByeo0SVxSBaIKJUsZq8Bz2bfz
      TVqLfwy4dwIAihxcVnyZIXyqS1ISUD0yF7Wps2/D9an6yMVjWeX9gZRSuk8R/5duTjOwVZXs
      JgnIdV3d+pxqkmwzQilWFiykmkeCIXFKm6dsDrYJDn7MeC8IgLumS/ENlOvqUkVi25Ntc+63
      QVl+TZkBaX4m0yb4v7QHZGtG08agOxVY19FyO6YyAqaqKCWbUuvKLxbXywg7z5XNtngOHQyy
      Y/enhveG9IfDYaEtH1DtsqRKIGtWTbzJy5StSORPGUwOL8dNSFVF9hcyE+K4MKXBaqpK0pMk
      P/c8TxuwZqIhj5dSQ9o1jHCbVWafEt4LCQCsX9TOzo6OsgK4ousCl54WqkaNRqO0zTpzXraF
      THMwXaVVrtOqRSMXKY1M6S0i5GYSss5AuoZpwJO4ZAkojWU2GTbvYZYwmrEBpRTa7fYnlftj
      4r0hAOCyWox6PYCCaxQoinO6DU3IJLptK8vK3Jz0vFAfN+MJm3z/sjenHD9hSjd+zx0XSURM
      p+ax7EBBrk1dn9FhCdu2dXSYUoj3sSwLzWbzk/T9S7xXBKCUwpMnTwAA0+lUb55Ab4XMiAQu
      u5eVvXxySEks/Lzq3qZaIz+n5KGHhxy60WjoAJ55HzPfCbhc+DJ4Bay9PWxnIr1CeX7ZoMo0
      0CXRMtdHSkPpPWLyHB0Ju7u7n6zrU+K9IgDg0ogcDAbodrs4OzvTDVopGahW0E1ZtviBS9el
      1OO56MqMWGnwysXJqi8ABQnF1oYcW61W0z51qjeMZ1AqAJcqGtU4Vm2ZXi9JOJLoJFMgUZIY
      ytzEnAu2S98muv6p4L0jAFNP3d/fR6/Xw8uXL68Ei0yXIFAs9uBiYi6NzI8vM7DLjF7z+tLH
      L0s4WSYpz8nzXKdFs25guVwW9HullO62YBIrCcMch4xsyzHTlVpGBHmeo9PpfNTljW+C98YL
      tAm+7+Pg4EAvOOrlVd6fMs8NPR4yoETICKvpZSnL2ZGemzLIPHxegxtRsL0IA2Oe52mJsq2R
      LVUxk5Ob2xpxrO12+2Hxl+C9kwBVWCdstWBZQJ4lqNc9NBouzkdRwUgFNvfyBK4WnZctNOnW
      5N/SF28e6zhOocpN3l/uK8wEP15HSqvb8sUznZyqYa/X+6Q9PZvwwRCAUgpffN7Gf/yjAVzX
      QpquF87TZ0t8972LVydLpGlxT7BtUeXrp5q1TXsT6uXA1Y35zEUtg1lU2VgRtum8su+qXLS0
      Rfb29h70/Q34YAgAABZLF9NZhJ1hTfv5B30bjx/tIAyB58cBvv9hjotxgCSpjgEopVCruVAK
      QK5g2w7CqDo/SBqZZk2vtEtoGMvFaG6JSvtDlj2WebHkveV9CNOrZKpQURTh4ODgYfFfgw+K
      AJRy8OokxO5O/XUKRII//8spBgMHva6Dn3zdws9/2sHFOMYPTxf44dkMQWA2z3XgeQ7+9//1
      AI3G2kUaBhn+/C9PcT5abLj31UgvP5fd10xItSZJEr0jDNUkpj6XnUsC2RTQKzuXrtP72HXx
      Q8MHN0MvXub48osIzYaLOMnhej5WgY/FMsXoYow//Z92MBz4GA58/OEv+1iuYsBcWwpoNdn3
      R8H3bPyf/8cj/Nn/e4rnLyYb7Yeboqyjm/yOi1RuqCFVLpnyIcFie6DYDYLnyR3VH1CND44A
      LMvFb/59gT/6ZQ+tpod2c4FVCFiWjeVKIU1zKMX0AoV2a3OkkwvScy385z/dwz/9s49/+tXJ
      GxFB2TmmfSFdp2maIgiCggRhRwZTTaL7VEoTuZk2vV8M2j14fLbDB0cAADAaAasgQb3mwPUs
      rF6rz5bl44dnc3z9o87W15IL1HMV/uAXXTw7mmI8Wd3KWKVxTD2e3iIpAeinB6CLdmR1V7fb
      1YXr3Kia3R2kbcDmtvQEPWAzPog4gIk0s3F6ug4wPXnkIc+Y9mvh5asE2TXce5N3xXEU9vca
      hc9qNQ+HBx10OzXUan7peVW6ODs3MDbAGl8G82q1mk5xGI/HmM1m8H0fnU5Hb5rRaDR0rXCr
      1cLh4aHO5Tk8PNQbaQPQ6tM22zM94AOQAGW+ccuy8Ot/TxCEM/z4qyZqNRt/9Tdj5HABePjh
      6QxfffnmOvAf/+EAQZjh6Pl6i9E//sMd/PTHbSil8Oxoib/6m1eYLy69NmX7dkn4vo/9/X0A
      xaQ4EsR0OsVsNtPEcR3ntiwLBwcHel4ajQaCINDd3pRSmM/naLfbn2ya87aw9/b2vr3vQWzC
      arWEbV9NeVDKwnSmMJ2u8OUXTSikOH65guu4WCwmeHTYhGVVt0sBily76LpU+OxJA/t7TdiO
      h5//tAXHsV5HVB10Oz5+9/1UX6Os2zJ/27aNnZ2dwm6PBNUvcvx6vY5Go1Eov6yC+V2tVtO7
      yNNzRIJ6QDXeewJwnOreQHmeYxVYCMMVfvLjDoIgwWwBJKmH5TLA/l6tsFDMQnKibLFZlkK7
      5eDJ4zocp7ida6Nh4+VJiOUyrnRhch/dnZ0dnZJ8HWQk+6acm8bvcrnU4wnDEJ1O50EKbMB7
      bwNsyodhIf1slsGyFH75TQ+uk8BxPJyeO/jVv06QpOX5QmV5P9uOxbYVfvnNAJ7rFLI6gcs0
      7MePH6Pf75e6MN8VzAS/mz7fp4j3ngCqsA5AWfC9JXpdbuxsYW/XQZ5nsCwbL15a+K//1wkW
      y+gKp5Z+8zdZJI8Pa/jFNztwRASWCXfD4fBeFl6tVisQI9O1H1CND5oAfL+ONFV48ripjdBf
      /H4X9Vr0mhPbsKw6zs7WqRGSAN7Ez28Sy+//vI1ev14o1D88PLy3JlMkQInxeHwvY/lQ8MES
      ALBekHFSw1/97QJHzxf44ekYSin84S/aiOO1R8SybPzrbzL887+MEcdpwejdxKWvS09Y/w08
      ftTQxFfWl/MuUavV9C7uSins7+8XbIIHXMUHTQDA69A/fPzbb4F/+XWCVydLNJsefvyVgzRd
      pwrYtoOTMxd/+dejgiSQ0dMybEMEP/6qhV6vWWjleJ/odrs6tfrk5OSKA0HWF9/3WN8HvPde
      oG2xLg5x8fIkRRSF+NlPevjd92Pkuft6wVpQKsLhvg/Hudp/fxOXrHKXKqXgOgpff9VBr9dA
      lq1TMVzXvzcpQKKWbVhk1zdZm/BgJH8EEsCEZdl49jxGmuY4PKgZexBYeHWyqKwmk7huYUii
      8FwLP/qijv/yv+zjf/5PAyTJ7TXqehN0Oh30+/1CbpGJqsq5Tw0f6QzkUAr4vZ/1YNuX7cSz
      vIZ/+XWOv/7bc0ynQWkPIImivr+51SK/H08Ax7nfHJw8X3eW7vf7GAwGpd8/YI2PkgCm0zku
      LgJYlsKjg8vuDkopuK6H+bKOX/3ruFQKyAIXnlNmJ8jP5c/zF8F7oVYopdDtdkv7EZ2ent7T
      qN4/fJQE0OkM8Bd/fYEfns3Q7dQQRQusVpe7IlqWhfHUx9/+/WmhV6bk8mW1vWWQ5wVhguXq
      /eeuruuWJu59ipLhoySAdZvBLn792xwX4wT/23/ewf5uUfQ7jovxtI7//k8T/ZlUd4C1W5Et
      zeW55v8aucKWjejuDZZlodvt6n2LP3W899mgbwPLsvHyJMdytcAvf7+HiQNnQQAAFEFJREFU
      v/ybKfK8Jr638Oo0x9NnM3z+WbsgARzHwc7Ojs65Z3tztiSR5Yrs6ZNmb7+z5W3B7EwnYVkW
      Go1iyvf7oLbdBz5qAgDw2jC18N33M2SZDfM9W5aNf/l1DM9d4OCgWVCB2HdT7irD5lPcxI/H
      AkAYpveykNIkhRUEcJMM/WQtgqZ5hiiOcaFy2I06Wp2H1OgyfPQEAKwDYcevLChV1f7ExX/7
      5wC1uoVed11KmGUZzs7ONCet6hjH77Msw3gSwLbvbkrzPIczW+BHYY66svDvVoYzlaOb5vhj
      twE4QJJlGAUR/nF1gtixdTt166FbBICPKBB2Ha7nfhaUijEc+IXFfl3tAL9blzqmeHVydcf7
      d4E8zxGtAny2iDFyFI7qDoK6j8z3EIchRnGESOXwLAt9x8MBbOxmClkU4Wh0jnqr9d6oa/eJ
      T0ICXIcoCuF5Ps7OM2QZYFnFvcUkTCKQv4eDGgb9JcaTt+/wluc50iQGkEFZLvI8g+NcujSz
      dB3x/l3bg+37iBZLtCZzzLpNpJ0mAgALz8OzKEZ3EaCf51DI8Quvhce2j6fnY4SDLqw7TNd+
      H/FAAIBWjcLIw/dPZ/jxV93Xn1/l9PI3v5ectNsGxhO8EfI8g+vEaDSAdsvC48MGbMfCZBJh
      Mk3x9Ci93CjDcdAWKQ5uvY7Q9+A7TrH5ru9h6rkYvd7dMrhY4Cuvjj3UMJpGeGoFmNU9WK5T
      UIvMjUg+VnzcT7claMxGUYCd4bqHZln9wKZ0anpbej0H3/0QF7j1NsjzHHs7GX75zaBgqCul
      0Gr6WCzHG6WK4zqoep0cWxRF+N7KUEtC1KDQsWz8MrMQzBN8Z4UYN3zYvqef9VOICzwQwGvk
      eY5GPYPvVXd5KyMCWbRvWRaGgzoO92OcnN1MDcrzHN2ODdu+GnU+H63wL/86Q62+fbsXE+xA
      HVoWvnNcpGmCn0wCHLo1NGDhDywPwSrF09UCJw0Ptu99Em0VHwjgNdaLzkWWVXO9skgx/+b3
      lmXhF7/fxd/9wxjT+fY5QZYF1OtXX0eaZvi33yzQaL79Pr5KKb2JR2MRI2nU8G9ZiijL0LIc
      pCrHhVJQaq0CLfMAiZXBzxy0bYXDvocgynA2S5Hm9kfhSXogAIEkdfG3/zDFf/ijFpoNt7Dg
      gcsWLSxA52fyewCwbQtf/6iOv/tvESzr+kWS5zl8L8L+3tUC9iTJcHKyQKN5ewl2SimE3Rae
      i89kV1S1HhT8zEXmJ7CftOBPlvjTr9cdJoIoxd/8doZ/fRGj1f6wi+4f/GAGwsjFX/zVAn//
      jxcIw3V54abCGHPzPKLf9/HFkxxJElemXrMhluus8Cf/sXflGlmWY7mM4FekNL8rkNDDMES2
      TJCnGerOpWFd82z8yY9b+JOvHDzphFD51S2ZPhR8MnGAbbHm8DZWgYWT0yX2dz247mUBjbQD
      qjgfP+/3PezuAO1WjtEoQZrlyLMIjh1jdwd48shGEgfY3/Wwv9e40kT3n341xr/9Zowsr9+a
      zz5JEyxViNjOkMQJbGW0VY8jTL0Ai3AJy3u9X7OV47GV4bDj4mQcAcjx25chlLIwbNkIwxiL
      xNFEEwTBlV0y31eob7755uM39d8CaRqi0wZ2d1wMBz4G/SI3LlOBZJcIctOz8xWSJEOv68J1
      L3eT57GrIAVy2hfAs+dL/N0/nGB3d/eN+gRVIUlTrNwIasdHFiaILwJ00nohrSNKYwRhsM4a
      VYANCzuNFL9/6OIvvgNspIC9VoeSJAag9Pmz2Ux3re73+1cIV24++D7ggQC2RJ7nsFSCn//U
      xeNHLW0LmIYwYe4MWXY9LuooyvD0+QzD4TpBbblM8P/82THSNMOjR4/eybPESQK87ly3DYGl
      SQwLKZRzt+rYu8aDEbwl1sX3Lv75X1P88Owch/sunjxuwfMu9xEDrgbLuE+xSTDyut99P8Zn
      n3dQrxclw7tSH5RS8G4YAbYdF8DtRo3L+r7eNR4I4IZY70Ng47e/y/G7Hy6wM1TodV08ftQs
      +PDly61Kq+Ai/72fDfHsxQy+34RlrT0/gCqt55XE9KFDFuffFx4I4A2hlEKW+zg5w7qm4OgC
      X3zmYW+3Dt+/nNYwTPDb76ZIkgy7O37B2M3zHLN5jNkshGMpHB/P8fhxC0my3uKI+wUAl52k
      WY9g7jzzIYJ9lO4TDzbALSLLUuR5gm7Hws7AwnyR4eQsg1Le6+KZBJ12ij/8ZQeNuos4zvDq
      bInhcJ2CvfY2AatVgqOjBV69XOGg5cG1gWWYI8tz7HVt2AqoeRZOpwmOJ8AqfegA/aZ4IIA7
      Rp7n8NwY/8MftzCextg/WLdxl99nWY6L0yUe+w66dRsKuKJaUX347fMp/uG7JSLVhLIeBPpN
      8WHL0A8QSilEsYu/+fsZZvMQShWLavI8x2wW4ZGj0G84sIxifWB9/GQR49VFBM9x8IefNxGu
      5vf4VG+O6zYXedd4IIB7gFIKSerj6CjHy1fzQhuWJMlx9nQKbltcZvAmGfDi1RJt28Jhy8eP
      d+to+9aVxrgfAmRayX3gQWbeJ5SPf/7nBD+0LuC6Cu22hV3Hwv/4VRerKMevfpgiy4GfPG7B
      tRWORwEWyxR5muEn+03Yr3fAOZuuEKL2QebuM15yX/jwZuwjg2U5WC7Xr2E8znFqhXhxGuHr
      PRdPhj5OxhF+9f0FvnrUwWoW4ScHLX0uF87zUQhlFw1heo3ed5j11nftFn0ggPcISimEeQ2v
      FsCL36bI0gVsS8HPQzScJb7eW+87IJPz1hz06rU+JBfpQxzgAVdg2zZse+0eTTIbddcC8gxZ
      drVM83cnc+SWV1hIt7mo8jxHGEewLQvuDSvdrkNZy8m7xIfDJj5h5JaLP/s+x/ev90aW26jm
      eY7c9t8px1+kK6gvfASNBHmeI4hDzLPqznJm+niVkfs+JMU9EMAHAmU5+LsXwMtJhEajoTu7
      5cCt9yLSHqk0wbIRw/+ihcXvJvAXtvbaTKYTLKIlwji8YsTmeY5ULPoqI/d9sFEeVKAPCKly
      8X9/l+DXJy/w1X4TaZxgv+MgyG5nISVpgiiPkTcsWA0HTsNDs1nD5NUYtusgzTJMsEQ2tNDt
      HgBKIUpSrF4s0UWjUBttoZgOPp3PUPN9eO79to438UAAHxhy5eAff3eCv/n1KZRS2Os1kMGC
      13i7hRUmEXDootFvr7NRLQXkwPTlBE6vhkUQIq878LqXXiilFCzbQtZPEJ5GyJEjUzlylcPJ
      bfiv90lQar1zfYIEjpsgXoZQEdBptTGZTErrBu4KDwTwgSHPc4RhqPcBe3WxQJ7n2LX9t9oV
      PrJjdIa9QuAtSzOkyGCnGeqhgww50L0MXtGF6XZriOsJlGXBciwoAPEyRnS2gh0rZL5C6xe7
      sDwHlmMhP7PQmNq65+qDF+gBW0MphUePHmG1WiHLMkynUziOg+l0is8++wxBEJSeF8dx5abd
      eZ7DbV7d1yxZRrDrLtJlghZ8pKsUYZjArrk6gKXrHl63k9HdtZse8oa7Lrox0sHdnQaWfojZ
      dA6/X+xSfdd4IIAPELZto9VaqyL1eh2j0QiO42A2myFNU11HQE59fn6O+XwO319LiXa7XSiB
      DGox3NfVaLIZ8OJsBrtTg9P2sLhYwM4UYLuF43ifqwX9r+sWDEKhTeB1akCnhizNcPHvYwz8
      7rufuBI8EMAHDtd10Ww2EQQBbNvGaDTCbDZDs9lEGIZYLBawLAufffYZkiTB+fk5wjDE/v4+
      ACB0Y9Q/761VE6OmefD1HiYvLoCaDfWohlwp2M5Vg9tM1DM/M48txCsshVRliJP41mMM2+Ah
      HfojQJZl8DwPYRhiMplgtVppHzs3y6PLMQgCnJ+fo96uw2l4aHzVg9dc2w5lG2pkUYrZeA67
      pC+RXOxVbSPLquGktyjPcyRBDAUFdRyiDu9ODeIHCfARwLIsvXHHYDBAlmV4+fIl4jjWvYsI
      pRQcx4Hv1WDv1eB4xdYlZnLaWn0pv688r91uI01TpGmKJEn0rjqO4+i8pCiKYFkWPM+D67oI
      w3BNcDkQP19geT7DLE3R7XZRr9dvf6JK8EAAHxEYcbUsC48fP8bJyUnBFw8Avu+jO+yh8ZMe
      VP1yq6eqJDTLsZCHKVRLIUe+jrwBr9vHXUIphXq9rhd8lmXaK7VYLPSCb7fbeiNvnnPy7CXC
      V3Pkr+2Gi4sLWJb1Vl6tbfFAAB8p8jzH7u5u6Xeu5SBcBag3WhvVFwBQtoXuox7CyQpJnMCy
      19IksxRy75IK5vM5Go2G9kKlaYowDOG6a48R/14ul7AsS0uDYLkC4gzKt4HlWm2zLAuz2Uyf
      +y7xYAN8ogjyEK1vdqCsm7dCz/McwXiFGCmyNAOUQh5nsFwLdq3at18mZdLzAIt/HxXyhVgd
      Z1kWBoNBIffptvGQC/SpIqtOUtsEEovfrcG3HNRcF55lo91vQYWbW7aYn+d5jjy4WhKplNKd
      L16+fInFYqF36VwsFoiiSFe/vW0Q7UEF+kSRInujxSMlhdsWOnqaI3duFtXN8xzWbg3ehY88
      zBDHceF7y7IwHA6R53np7vYHBwcYjUbwPA+NRuONnudBAnyisPJi7UCVCrRthdZqvITbeoO2
      iY6C+7iF3jd7cGvFOEC320Wv19MGs/zp9XqYTqcIwxDT6RRnZ2dvJNEeJMAni/Wi7/V6WC6X
      2uBks6o4juF5HqIoQru9TlqzLAuu62IymVyJGVhsAWmX8NQcV7xGAGBBIRot0ejU4XdqcGoe
      olWkr1mr1XB0dFQ6eo6RY0jTFCcnJ+h0OvBrPuwt9mVYj+EBnyRSpEiCtcqRpusNvpvNJprN
      5noHmdcqheM4CMMQzWYT9Xod9XodtVqt0FTXsiw4voMsvlrgkuc5wpczYJEgHgdIFhHSaQi1
      iOEkwODzIfxeHbkFDH65D8u+jENs8gAtl0u02239PwkhcTKE9WRro/5BAnyi8JWLPF0n05Gb
      npycrA1c38d4PAYA/X8YhrAsC7VaDcnrHScL12vXEB2HyP2iyqSUgr/Xgg8Lnb02kiBBmqSo
      deva28PYQnixjmBbr3ftDIIAg8EAo9HoyviDIECv1yuob67vYvDNPlbzJfLn6Vaq24ME+MRA
      L04+dOB36kiSBGEYYrVaIUmS9d5gy6WO6vJ/7mazXC5LuWueZIBdseBshXAVQdkW3KaHWncd
      5TU9RqvTObL0skfSeDyG4zgFTl/2LETv6x04DRdes4Zky3LLBwL4xLBKAqzcCLX9ZuUx5sLc
      pl17GqdADqgyZR9AnCSI5iHy9KrLk2pUElxt7HV2dqYJwPM8eJ6HeqeBZrOJOI61muTVPPiv
      u2Z4DQ+pt51B/KACfUJI0gTely3UepepzxJSneCipGdl0+LXXDvOEI2X8Epy/O2Gh9HTcww+
      H8JrFVMceO3Okx6C8bJ4L6UQRiFarRbcno/6lx24NRfRJER4tsTwyQGyMIXfrcMWezXYQw+L
      pws0G9WEDjwQwCeFyErgW/VCO0KZrVmm2lQZosvTGfLstTqV5ai1aug87uH5//fsCgHkSYZ8
      GWPvZwc6lYKQksXr19Dst7AcL+B6Lry2j+bjLtyOj1oOpHECp+4CSsHr1+D1y92ueZ6jud/B
      LMsRnIWoWdU5RQ8E8AkgzzLkWYzf31W4SGIsssuCGTMGsG2JYhol8Ns11HsNQBxfa3hIVzHs
      mossSYEog2MpdA57Vxa/CafhYfhHh6i/mMHt+PB6tXVt8mvY+fbLVVkKbsvD7NkMteYDAbz3
      SJLknfT2zLIMPx1E+OUXLdR9B2kO/PfjCX6dOVCDdVXZTRtq5XkOp+5heb6A1/R1OSQA7P/e
      YyzHCyRBjGwVo7Xbhtso9jHadC/Ls9H6snxT8G0jvZRmo9+eoO08qEDvNfI8R5bGsCwHSRzD
      ueHeXdtcv1NX8N0197WQ448O6+idB/j+7AJRBjR8By8aDdies5X/PE8y5FmG4dd7hQAXd4Cs
      depApzyfv8zuuHXkwPmvX2FxOoOzYyMPctQr9lp+IIB7RhJHcJMxAjTgeLdfBLLbiPGj/eYV
      Hf+r3Qa+ev13ngN//m+nUN0GXlgecE1Kg2Vbpd4eVqHZ9uXew7Q1mNz2rjtB53kO3/MQXCwx
      +NEu0ihF7GTI8wAqAOpu8dkeCOCeYdsOOrUGvDjHbDWFqneRRAH8+mbRvQ3yLMPjDuDYxe7L
      pmGrFPCffjLAs3mEn7cd/NezENYGvRmWgtv0Ec4D+O2rxCJbHmoX5+vsTdd13+k+BuueRha6
      TwbofNYHcNmga/KrMwR+jDiKoQLAze0HArhvKMvCLHaRwoHlZVAAHPd2KqEGfoCfP7ncaI+d
      GsrwfLRCb6eBbsvFH0wj/Ms8QLpBEjh1F8H5opQAJMy9kplr5DgOoijSEsHzPB1sexMpwdwk
      drsY/GhXR6yVUggnK2RZit6Pd9e5Q0mKcLJ6CITdN5RSyO0alGWv9X+lYN1Sz0zPtWFf43kB
      1ipQZtvottbG6s8fN/Efmjmi8WLjeW/a3JbVYusO2OtnjeMYtVqtsviFaROMUPOHtQOe56Fe
      X0e2WS+gUy0AJEGC1o/6mgHYjo3GsPUgAd4X8MXcllGY5znCKHndPW6F/7+9a8lBEAaiD2gJ
      jRDjBjEkbryK9/DKHkFjYoSFkViBQD8umiIfd+yMs+pqkiZv+pl5b2a9YgM6sTWlgNO9QpoO
      6QbbmCF/cZyVNoqvZw3hOYDSoFEA2UgQfx58hBDdya+1BufTOWf928CyUy1z1QagBbvZz6cC
      3E/xRpvlxB/wl0T+tGnZIg4qXPICh7358rquazS6rUL2qKGohzQJ4X3h8ZS1QFY0qFuJXRKi
      4IYQd7yWuDkUdOGDsnlyRccxA8Grathu3QKVENIV7uzziDHWrfvEvHG3ur4fGwzjNOwbo+YV
      Lq9ethoAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
